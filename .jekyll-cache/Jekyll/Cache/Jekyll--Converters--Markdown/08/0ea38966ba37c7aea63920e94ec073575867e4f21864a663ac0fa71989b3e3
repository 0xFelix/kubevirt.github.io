I"ÿd<h2 id="introduction">Introduction</h2>

<p><a href="https://novnc.com/">NoVNC</a> is a JavaScript VNC client using WebSockets and HTML5 Canvas. We provide websocket api for VNC access under</p>

<pre><code class="language-url">APISERVER:/apis/subresources.kubevirt.io/v1alpha3/namespaces/NAMESPACE/virtualmachineinstances/VM/vnc
</code></pre>

<p>but we can not access the VNC api directly since authorization is needed. In order to solve the problem, we provide a component using <code class="highlighter-rouge">kubectl proxy</code> to provide a authorized vnc acess, we name this Component <a href="https://github.com/wavezhang/virtVNC"><code class="highlighter-rouge">virtVNC</code></a>.</p>

<p>In this post we are going to show how to do this in detail.</p>

<h2 id="the-detailed-method">The detailed method</h2>

<h3 id="prepare-docker-image">Prepare Docker Image</h3>

<p>First prepare docker build dicrectory.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">mkdir</span> <span class="nt">-p</span> virtvnc/static
</code></pre></div></div>

<p>Then clone noVNC files from github.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/novnc/noVNC
</code></pre></div></div>

<p>And then copy noVNC files to docker build directory.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cp </span>noVNC/app virtvnc/static/
<span class="nb">cp </span>noVNC/core virtvnc/static/
<span class="nb">cp </span>noVNC/vender virtvnc/static/
<span class="nb">cp </span>noVNC/<span class="k">*</span>.html virtvnc/static/
</code></pre></div></div>

<p>Create a file <code class="highlighter-rouge">index.html</code> to <code class="highlighter-rouge">virtvnc/static/</code> with the following content. The page will display VMs and corresponding VNC links.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;html&gt;</span>
  <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">"utf-8"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;style&gt;</span>
     <span class="nt">td</span> <span class="p">{</span>
        <span class="nl">padding</span><span class="p">:</span> <span class="m">5px</span><span class="p">;</span>
     <span class="p">}</span>
     <span class="nc">.button</span> <span class="p">{</span>
       <span class="nl">background-color</span><span class="p">:</span> <span class="no">white</span><span class="p">;</span>
       <span class="nl">border</span><span class="p">:</span> <span class="m">2px</span> <span class="nb">solid</span> <span class="no">black</span><span class="p">;</span>
       <span class="nl">color</span><span class="p">:</span> <span class="no">black</span><span class="p">;</span>
       <span class="nl">padding</span><span class="p">:</span> <span class="m">5px</span><span class="p">;</span>
       <span class="nl">text-align</span><span class="p">:</span> <span class="nb">center</span><span class="p">;</span>
       <span class="nl">text-decoration</span><span class="p">:</span> <span class="nb">none</span><span class="p">;</span>
       <span class="nl">display</span><span class="p">:</span> <span class="n">inline-block</span><span class="p">;</span>
       <span class="nl">font-size</span><span class="p">:</span> <span class="m">16px</span><span class="p">;</span>
       <span class="nl">-webkit-transition-duration</span><span class="p">:</span> <span class="m">0.4s</span><span class="p">;</span>
       <span class="nl">transition-duration</span><span class="p">:</span> <span class="m">0.4s</span><span class="p">;</span>
     <span class="p">}</span>
     <span class="nc">.button</span><span class="nd">:hover</span><span class="p">{</span>
       <span class="nl">background-color</span><span class="p">:</span> <span class="no">black</span><span class="p">;</span>
       <span class="nl">color</span><span class="p">:</span> <span class="no">white</span><span class="p">;</span>
       <span class="nl">cursor</span><span class="p">:</span> <span class="nb">pointer</span><span class="p">;</span>
     <span class="p">}</span>
     <span class="nt">button</span><span class="o">[</span><span class="nt">disabled</span><span class="o">]</span> <span class="p">{</span>
       <span class="nl">opacity</span><span class="p">:</span> <span class="m">.65</span><span class="p">;</span>
     <span class="p">}</span>
     <span class="nt">button</span><span class="o">[</span><span class="nt">disabled</span><span class="o">]</span><span class="nd">:hover</span> <span class="p">{</span>
       <span class="nl">color</span><span class="p">:</span> <span class="no">black</span><span class="p">;</span>
       <span class="nl">background</span><span class="p">:</span> <span class="no">white</span><span class="p">;</span>
     <span class="p">}</span>
   <span class="nt">&lt;/style&gt;</span>
    <span class="c">&lt;!-- Promise polyfill for IE11 --&gt;</span>
    <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"vendor/promise.js"</span><span class="nt">&gt;&lt;/script&gt;</span>

    <span class="c">&lt;!-- ES2015/ES6 modules polyfill --&gt;</span>
    <span class="nt">&lt;script </span><span class="na">nomodule</span> <span class="na">src=</span><span class="s">"vendor/browser-es-module-loader/dist/browser-es-module-loader.js"</span><span class="nt">&gt;&lt;/script&gt;</span>


    <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">"module"</span> <span class="na">crossorigin=</span><span class="s">"anonymous"</span><span class="nt">&gt;</span>
      <span class="k">import</span> <span class="o">*</span> <span class="k">as</span> <span class="nx">WebUtil</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">./app/webutil.js</span><span class="dl">"</span><span class="p">;</span>
      <span class="kd">const</span> <span class="nx">apiPrefix</span><span class="o">=</span><span class="dl">'</span><span class="s1">k8s/apis</span><span class="dl">'</span>
      <span class="kd">function</span> <span class="nx">loadVMI</span><span class="p">(</span><span class="nx">namespace</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">WebUtil</span><span class="p">.</span><span class="nx">fetchJSON</span><span class="p">(</span><span class="dl">'</span><span class="s1">/</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">apiPrefix</span> <span class="o">+</span> <span class="dl">'</span><span class="s1">/kubevirt.io/v1alpha3/namespaces/</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">namespace</span> <span class="o">+</span> <span class="dl">'</span><span class="s1">/virtualmachineinstances/</span><span class="dl">'</span><span class="p">)</span>
          <span class="p">.</span><span class="nx">then</span><span class="p">((</span><span class="nx">resp</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
            <span class="kd">let</span> <span class="nx">vmis</span> <span class="o">=</span> <span class="p">[];</span>
            <span class="nx">resp</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">i</span> <span class="o">=&gt;</span> <span class="p">{</span>
              <span class="kd">let</span> <span class="nx">tr</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="dl">'</span><span class="s1">tr</span><span class="dl">'</span><span class="p">);</span>
              <span class="nx">tr</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="dl">"</span><span class="s2">&lt;td&gt;</span><span class="dl">"</span> <span class="o">+</span> <span class="nx">i</span><span class="p">.</span><span class="nx">metadata</span><span class="p">.</span><span class="nx">name</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">&lt;/td&gt;&lt;td&gt;</span><span class="dl">"</span> <span class="o">+</span> <span class="nb">String</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">status</span><span class="p">.</span><span class="nx">phase</span><span class="p">)</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">&lt;/td&gt;&lt;td&gt;</span><span class="dl">"</span> <span class="o">+</span> <span class="nb">String</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">status</span><span class="p">.</span><span class="nx">interfaces</span> <span class="o">!==</span> <span class="kc">undefined</span> <span class="p">?</span> <span class="nx">i</span><span class="p">.</span><span class="nx">status</span><span class="p">.</span><span class="nx">interfaces</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">ipAddress</span> <span class="p">:</span> <span class="dl">''</span><span class="p">)</span>  <span class="o">+</span> <span class="dl">"</span><span class="s2">&lt;/td&gt;&lt;td&gt;</span><span class="dl">"</span> <span class="o">+</span> <span class="nb">String</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">status</span><span class="p">.</span><span class="nx">nodeName</span> <span class="o">!==</span> <span class="kc">undefined</span> <span class="p">?</span> <span class="nx">i</span><span class="p">.</span><span class="nx">status</span><span class="p">.</span><span class="nx">nodeName</span> <span class="p">:</span> <span class="dl">''</span><span class="p">)</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">&lt;/td&gt;&lt;td&gt;&lt;button class='button' </span><span class="dl">"</span> <span class="o">+</span> <span class="nb">String</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">status</span><span class="p">.</span><span class="nx">phase</span> <span class="o">==</span><span class="dl">"</span><span class="s2">Running</span><span class="dl">"</span> <span class="p">?</span> <span class="dl">""</span> <span class="p">:</span> <span class="dl">"</span><span class="s2">disabled</span><span class="dl">"</span><span class="p">)</span>  <span class="o">+</span> <span class="dl">"</span><span class="s2"> onclick=</span><span class="se">\"</span><span class="s2">window.open('vnc_lite.html?path=</span><span class="dl">"</span> <span class="o">+</span> <span class="nx">apiPrefix</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">/subresources.kubevirt.io/v1alpha3/namespaces/</span><span class="dl">"</span> <span class="o">+</span> <span class="nx">namespace</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">/virtualmachineinstances/</span><span class="dl">"</span> <span class="o">+</span> <span class="nx">i</span><span class="p">.</span><span class="nx">metadata</span><span class="p">.</span><span class="nx">name</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">/vnc', 'novnc_window', 'resizable=yes,toolbar=no,location=no,status=no,scrollbars=no,menubar=no,width=1030,height=800')</span><span class="se">\"</span><span class="s2">&gt;VNC&lt;/button&gt;&lt;/td&gt;</span><span class="dl">"</span><span class="p">;</span>
              <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">vmis</span><span class="dl">"</span><span class="p">).</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">tr</span><span class="p">);</span>
            <span class="p">});</span>
            <span class="k">if</span> <span class="p">(</span><span class="nx">resp</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">length</span> <span class="o">===</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
              <span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="dl">"</span><span class="s2">No virtual machines in the namespace.</span><span class="dl">"</span><span class="p">);</span>
            <span class="p">}</span>
          <span class="p">})</span>
          <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">err</span> <span class="o">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Failed to get vmis: </span><span class="dl">"</span> <span class="o">+</span> <span class="nx">err</span><span class="p">));</span>
       <span class="p">}</span>
       <span class="kd">let</span> <span class="nx">namespace</span> <span class="o">=</span> <span class="nx">WebUtil</span><span class="p">.</span><span class="nx">getQueryVar</span><span class="p">(</span><span class="dl">'</span><span class="s1">namespace</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">default</span><span class="dl">'</span><span class="p">);</span>
       <span class="nx">loadVMI</span><span class="p">(</span><span class="nx">namespace</span><span class="p">);</span>
    <span class="nt">&lt;/script&gt;</span>
  <span class="nt">&lt;/meta&gt;</span>

  <span class="nt">&lt;body&gt;</span>
   <span class="nt">&lt;table&gt;&lt;tbody</span> <span class="na">id=</span><span class="s">"vmis"</span><span class="nt">&gt;</span>
   <span class="nt">&lt;/tbody&gt;&lt;/table&gt;</span>
  <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div>

<p>Create dockerfile with following content to add static html files and set up <code class="highlighter-rouge">kubectl proxy</code> command line args.</p>

<pre><code class="language-Dockerfile">FROM quay.io/bitnami/kubectl:1.15
ADD static /static
CMD ["proxy", "--www=/static", "--accept-hosts=^.*$", "--address=[::]", "--api-prefix=/k8s/", "--www-prefix="]
</code></pre>

<p>Finally use <code class="highlighter-rouge">docker build</code> to build docker image.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cd virtvnc
docker build -t quay.io/samblade/virtvnc:v0.1 .
</code></pre></div></div>

<h3 id="setting-up-rbac">Setting Up RBAC</h3>

<p>Create a service account for virtvnc.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">apiVersion</span><span class="pi">:</span> <span class="s">v1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">ServiceAccount</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">virtvnc</span>
  <span class="na">namespace</span><span class="pi">:</span> <span class="s">kubevirt</span>
</code></pre></div></div>

<p>Then define cluster role for kubevirt, setting up permissions needed.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">kind</span><span class="pi">:</span> <span class="s">ClusterRole</span>
<span class="na">apiVersion</span><span class="pi">:</span> <span class="s">rbac.authorization.k8s.io/v1</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">virtvnc</span>
<span class="na">rules</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">apiGroups</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">subresources.kubevirt.io</span>
    <span class="na">resources</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">virtualmachineinstances/console</span>
      <span class="pi">-</span> <span class="s">virtualmachineinstances/vnc</span>
    <span class="na">verbs</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">get</span>
  <span class="pi">-</span> <span class="na">apiGroups</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">kubevirt.io</span>
    <span class="na">resources</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">virtualmachines</span>
      <span class="pi">-</span> <span class="s">virtualmachineinstances</span>
      <span class="pi">-</span> <span class="s">virtualmachineinstancepresets</span>
      <span class="pi">-</span> <span class="s">virtualmachineinstancereplicasets</span>
      <span class="pi">-</span> <span class="s">virtualmachineinstancemigrations</span>
    <span class="na">verbs</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">get</span>
      <span class="pi">-</span> <span class="s">list</span>
      <span class="pi">-</span> <span class="s">watch</span>
</code></pre></div></div>

<p>And then binding cluster role to service accout.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">kind</span><span class="pi">:</span> <span class="s">ClusterRoleBinding</span>
<span class="na">apiVersion</span><span class="pi">:</span> <span class="s">rbac.authorization.k8s.io/v1</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">virtvnc</span>
<span class="na">subjects</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">kind</span><span class="pi">:</span> <span class="s">ServiceAccount</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s">virtvnc</span>
    <span class="na">namespace</span><span class="pi">:</span> <span class="s">kubevirt</span>
<span class="na">roleRef</span><span class="pi">:</span>
  <span class="na">kind</span><span class="pi">:</span> <span class="s">ClusterRole</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">virtvnc</span>
  <span class="na">apiGroup</span><span class="pi">:</span> <span class="s">rbac.authorization.k8s.io</span>
</code></pre></div></div>

<h3 id="deploy-to-kubernetes">Deploy to kubernetes</h3>

<p>Create following yaml, and then apply to kubernetes to setup <code class="highlighter-rouge">virtvnc</code> deployment.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">apiVersion</span><span class="pi">:</span> <span class="s">extensions/v1beta1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">Deployment</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">virtvnc</span>
  <span class="na">namespace</span><span class="pi">:</span> <span class="s">kubevirt</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">replicas</span><span class="pi">:</span> <span class="m">1</span>
  <span class="na">selector</span><span class="pi">:</span>
    <span class="na">matchLabels</span><span class="pi">:</span>
      <span class="na">app</span><span class="pi">:</span> <span class="s">virtvnc</span>
  <span class="na">template</span><span class="pi">:</span>
    <span class="na">metadata</span><span class="pi">:</span>
      <span class="na">labels</span><span class="pi">:</span>
        <span class="na">app</span><span class="pi">:</span> <span class="s">virtvnc</span>
    <span class="na">spec</span><span class="pi">:</span>
      <span class="na">serviceAccountName</span><span class="pi">:</span> <span class="s">virtvnc</span>
      <span class="na">nodeSelector</span><span class="pi">:</span>
        <span class="s">node-role.kubernetes.io/master</span><span class="pi">:</span> <span class="s2">"</span><span class="s">"</span>
      <span class="na">tolerations</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="na">key</span><span class="pi">:</span> <span class="s2">"</span><span class="s">node-role.kubernetes.io/master"</span>
          <span class="na">operator</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Equal"</span>
          <span class="na">value</span><span class="pi">:</span> <span class="s2">"</span><span class="s">"</span>
          <span class="na">effect</span><span class="pi">:</span> <span class="s2">"</span><span class="s">NoSchedule"</span>
      <span class="na">containers</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">virtvnc</span>
          <span class="na">image</span><span class="pi">:</span> <span class="s">quay.io/samblade/virtvnc:v0.1</span>
          <span class="na">livenessProbe</span><span class="pi">:</span>
            <span class="na">httpGet</span><span class="pi">:</span>
              <span class="na">port</span><span class="pi">:</span> <span class="m">8001</span>
              <span class="na">path</span><span class="pi">:</span> <span class="s">/</span>
              <span class="na">scheme</span><span class="pi">:</span> <span class="s">HTTP</span>
            <span class="na">failureThreshold</span><span class="pi">:</span> <span class="m">30</span>
            <span class="na">initialDelaySeconds</span><span class="pi">:</span> <span class="m">30</span>
            <span class="na">periodSeconds</span><span class="pi">:</span> <span class="m">10</span>
            <span class="na">successThreshold</span><span class="pi">:</span> <span class="m">1</span>
            <span class="na">timeoutSeconds</span><span class="pi">:</span> <span class="m">5</span>
</code></pre></div></div>

<p>Expose a <code class="highlighter-rouge">NodePort</code> service, then we can access the web page from node network.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">apiVersion</span><span class="pi">:</span> <span class="s">v1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">Service</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">labels</span><span class="pi">:</span>
    <span class="na">app</span><span class="pi">:</span> <span class="s">virtvnc</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">virtvnc</span>
  <span class="na">namespace</span><span class="pi">:</span> <span class="s">kubevirt</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">ports</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">port</span><span class="pi">:</span> <span class="m">8001</span>
      <span class="na">protocol</span><span class="pi">:</span> <span class="s">TCP</span>
      <span class="na">targetPort</span><span class="pi">:</span> <span class="m">8001</span>
  <span class="na">selector</span><span class="pi">:</span>
    <span class="na">app</span><span class="pi">:</span> <span class="s">virtvnc</span>
  <span class="na">type</span><span class="pi">:</span> <span class="s">NodePort</span>
</code></pre></div></div>

<div class="premonition note"><div class="fa fa-check-square"></div><div class="content"><p class="header">Note</p><p>This will make all your virtual machines vnc &amp; console accessible to node network.**</p>


</div></div>
<h2 id="the-simple-way">The Simple Way</h2>

<p>In this <a href="https://github.com/wavezhang/virtVNC">github repo</a> and <a href="https://quay.io/repository/samblade/virtvnc">registry</a> youâll find a ready to use version of the above which you can deploy in a single command like this:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubectl apply <span class="nt">-f</span> https://github.com/wavezhang/virtVNC/raw/master/k8s/virtvnc.yaml
</code></pre></div></div>

<h2 id="access-vnc">Access VNC</h2>

<p>First get node port of <code class="highlighter-rouge">virtvnc</code> service.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubectl get svc <span class="nt">-n</span> kubevirt virtvnc
</code></pre></div></div>

<p>Then visit the following url in browser:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://NODEIP:NODEPORT/
</code></pre></div></div>

<p>If you want manage virtual machines in other namespace, you can specify namespace using query param <code class="highlighter-rouge">namespace</code> like following:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://NODEIP:NODEPORT/?namespace=test
</code></pre></div></div>

<p><img src="/assets/2019-11-11-Access-Virtual-Machines-graphic-console-using-noVNC/virtvnc.gif" alt="VirtVNC" title="VirtVNC" /></p>

<h2 id="references">References</h2>

<ul>
  <li><a href="https://github.com/novnc/noVNC/blob/master/docs/EMBEDDING.md">Embedding and Deploying noVNC Application</a></li>
  <li><a href="/2018/KubeVirt-API-Access-Control.html">Kubevirt Api Access Control</a></li>
  <li><a href="https://kubernetes.io/docs/tasks/access-kubernetes-api/http-proxy-access-api/">Use an HTTP Proxy to Access the Kubernetes API</a></li>
</ul>
:ET