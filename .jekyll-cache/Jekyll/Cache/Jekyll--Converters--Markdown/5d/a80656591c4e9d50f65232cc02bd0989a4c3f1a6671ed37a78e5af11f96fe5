I"<h1 id="how-to-easily-test-specific-versions-of-kubevirt-on-gcp">How to easily test specific versions of KubeVirt on GCP</h1>

<p>At KubeVirt, we created cloud images on gcp and aws to ease evaluation of the project. It works fine, has a dedicated CI and is updated when new releases come out, but i wanted to go a little bit further and see if i could easily spawn a vm which would default to latest versions of the components, or that would allow me to test a given PR without focusing on deployment details</p>

<h2 id="so-what-did-i-come-up-with">So What did I come up with</h2>

<p>the image is called <code class="highlighter-rouge">autolatest</code> and can be found on <a href="https://console.cloud.google.com/storage/browser/kubevirt-button">Google Storage</a></p>

<p>I assume that you have a Google account with an active payment method
or a free trial. You also need to make sure that you have a default keypair
installed.</p>

<p>From <code class="highlighter-rouge">console.cloud.google.com</code>, go to “Compute Engine”, “Images” and then click
on “Create Image” or click this <a href="https://console.cloud.google.com/compute/imagesAdd?" target="\_blank">link</a>.</p>

<p><img src="/assets/images/autodeployer/image.png" alt="screenshot0042" /></p>

<p>Fill in the following data:</p>

<p><strong>Name:</strong> kubevirt-autodeployer</p>

<p><strong>Family:</strong> centos-7 (optional)</p>

<p><strong>Source:</strong> cloud storage file</p>

<p><strong>Cloud storage file:</strong> kubevirt-button/autolatest-v0.1.tar.gz</p>

<p>Then you can create a new instance based on this image.
Go to “Compute Engine”, then to “VM instances”, and then click on “Create instance”.</p>

<p><img src="/assets/images/autodeployer/instance.png" alt="screenshot0042" /></p>

<p>It’s recommended to select:</p>

<ul>
  <li>the 2 CPU / 7.5GB instance</li>
  <li>a zone that supports the Haswell CPU Platform or newer (for nested virtualization to work), <code class="highlighter-rouge">us-central1-b</code> for instance</li>
</ul>

<p>Under <code class="highlighter-rouge">boot disk</code>, select the image that you created above.</p>

<p>If you want to use specific versions for any of the following components, create the corresponding metadata entry in Management/Metadata</p>

<ul>
  <li>k8s_version</li>
  <li>flannel_version</li>
  <li>kubevirt_version</li>
  <li>cdi_version</li>
</ul>

<p><img src="/assets/images/autodeployer/metadata.png" alt="screenshot0042" /></p>

<p>Now hit <code class="highlighter-rouge">Create</code> to start the instance.</p>

<p>Once vm is up, you should be able to connect and see through the presented banner which components got deployed</p>

<h2 id="what-happened-under-the-hood">What happened under the hood</h2>

<p>When the vm boots, it executes a boot script which does the following:</p>

<ul>
  <li>
    <p>Gather metadata for the following variables</p>

    <ul>
      <li>k8s_version</li>
      <li>flannel_version</li>
      <li>kubevirt_version</li>
      <li>cdi_version</li>
    </ul>
  </li>
  <li>
    <p>If those metadata variables are not set, rely on values fetched from this <a href="https://github.com/karmab/kubevirt-autodeployer/blob/master/versions.sh">url</a></p>
  </li>
  <li>
    <p>Once those variables are set, the corresponding elements are deployed.</p>
    <ul>
      <li>When latest or a PR number is specified for one of the components, we gather the corresponding latest release tag from the product repo and use it to deploy</li>
      <li>When master or a number is specified for kubevirt, we build containers from source and deploy kubevirt with them</li>
    </ul>
  </li>
</ul>

<p>The full script is available <a href="https://github.com/karmab/kubevirt-autodeployer/blob/master/image-files/first-boot.sh">here</a> and can be adapted to other platforms</p>
:ET