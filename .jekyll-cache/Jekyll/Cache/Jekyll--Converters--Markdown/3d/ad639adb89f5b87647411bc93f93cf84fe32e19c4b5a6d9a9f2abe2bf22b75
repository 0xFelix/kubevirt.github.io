I"PY<p>In this blog post we are going to talk about istio and virtual machines on top of Kubernetes. Some of the components we are going to use are <a href="https://istio.io/docs/concepts/what-is-istio/overview/">istio</a>, <a href="https://libvirt.org/index.html">libvirt</a>, <a href="http://ebtables.netfilter.org/">ebtables</a>, <a href="https://en.wikipedia.org/wiki/Iptables">iptables</a>, and <a href="https://github.com/LiamHaworth/go-tproxy">tproxy</a>. Please review the links provided for an overview and deeper dive into each technology</p>

<h1 id="research-explanation">Research explanation</h1>

<p>Our research goal was to give virtual machines running inside pods (KubeVirt project) all the benefits Kubernetes have to offer, one of them is a service mesh like istio.</p>

<h2 id="iptables-only-with-dnat-and-source-nat-configuration">Iptables only with dnat and source nat configuration</h2>

<p><span style="color:red;">This configuration is istio only!</span></p>

<p>For this solution we created the following architecture</p>

<p><img src="../assets/2018-06-03-Research-run-VMs-with-istio-service-mesh/Iptables-diagram.png" alt="Iptables-Diagram" /></p>

<p>With the following yaml configuration</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">apiVersion</span><span class="pi">:</span> <span class="s">v1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">Service</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">application-devel</span>
  <span class="na">labels</span><span class="pi">:</span>
    <span class="na">app</span><span class="pi">:</span> <span class="s">libvirtd-devel</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">ports</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">port</span><span class="pi">:</span> <span class="m">9080</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s">http</span>
  <span class="na">selector</span><span class="pi">:</span>
    <span class="na">app</span><span class="pi">:</span> <span class="s">libvirtd-devel</span>

<span class="nn">---</span>
<span class="na">apiVersion</span><span class="pi">:</span> <span class="s">v1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">Service</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">libvirtd-client-devel</span>
  <span class="na">labels</span><span class="pi">:</span>
    <span class="na">app</span><span class="pi">:</span> <span class="s">libvirtd-devel</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">ports</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">port</span><span class="pi">:</span> <span class="m">16509</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s">client-connection</span>
    <span class="pi">-</span> <span class="na">port</span><span class="pi">:</span> <span class="m">5900</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s">spice</span>
    <span class="pi">-</span> <span class="na">port</span><span class="pi">:</span> <span class="m">22</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s">ssh</span>
  <span class="na">selector</span><span class="pi">:</span>
    <span class="na">app</span><span class="pi">:</span> <span class="s">libvirtd-devel</span>
  <span class="na">type</span><span class="pi">:</span> <span class="s">LoadBalancer</span>
<span class="nn">---</span>
<span class="na">apiVersion</span><span class="pi">:</span> <span class="s">extensions/v1beta1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">Deployment</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">creationTimestamp</span><span class="pi">:</span> <span class="no">null</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">libvirtd-devel</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">replicas</span><span class="pi">:</span> <span class="m">1</span>
  <span class="na">strategy</span><span class="pi">:</span> <span class="pi">{}</span>
  <span class="na">template</span><span class="pi">:</span>
    <span class="na">metadata</span><span class="pi">:</span>
      <span class="na">annotations</span><span class="pi">:</span>
        <span class="s">sidecar.istio.io/status</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{"version":"43466efda2266e066fb5ad36f2d1658de02fc9411f6db00ccff561300a2a3c78","initContainers":["istio-init","enable-core-dump"],"containers":["istio-proxy"],"volumes":["istio-envoy","istio-certs"]}'</span>
      <span class="na">creationTimestamp</span><span class="pi">:</span> <span class="no">null</span>
      <span class="na">labels</span><span class="pi">:</span>
        <span class="na">app</span><span class="pi">:</span> <span class="s">libvirtd-devel</span>
    <span class="na">spec</span><span class="pi">:</span>
      <span class="na">containers</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="na">image</span><span class="pi">:</span> <span class="s">docker.io/sebassch/mylibvirtd:devel</span>
          <span class="na">imagePullPolicy</span><span class="pi">:</span> <span class="s">Always</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">compute</span>
          <span class="na">ports</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="na">containerPort</span><span class="pi">:</span> <span class="m">9080</span>
            <span class="pi">-</span> <span class="na">containerPort</span><span class="pi">:</span> <span class="m">16509</span>
            <span class="pi">-</span> <span class="na">containerPort</span><span class="pi">:</span> <span class="m">5900</span>
            <span class="pi">-</span> <span class="na">containerPort</span><span class="pi">:</span> <span class="m">22</span>
          <span class="na">securityContext</span><span class="pi">:</span>
            <span class="na">capabilities</span><span class="pi">:</span>
              <span class="na">add</span><span class="pi">:</span>
                <span class="pi">-</span> <span class="s">ALL</span>
            <span class="na">privileged</span><span class="pi">:</span> <span class="no">true</span>
            <span class="na">runAsUser</span><span class="pi">:</span> <span class="m">0</span>
          <span class="na">volumeMounts</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="na">mountPath</span><span class="pi">:</span> <span class="s">/var/lib/libvirt/images</span>
              <span class="na">name</span><span class="pi">:</span> <span class="s">test-volume</span>
            <span class="pi">-</span> <span class="na">mountPath</span><span class="pi">:</span> <span class="s">/host-dev</span>
              <span class="na">name</span><span class="pi">:</span> <span class="s">host-dev</span>
            <span class="pi">-</span> <span class="na">mountPath</span><span class="pi">:</span> <span class="s">/host-sys</span>
              <span class="na">name</span><span class="pi">:</span> <span class="s">host-sys</span>
          <span class="na">resources</span><span class="pi">:</span> <span class="pi">{}</span>
          <span class="na">env</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">LIBVIRTD_DEFAULT_NETWORK_DEVICE</span>
              <span class="na">value</span><span class="pi">:</span> <span class="s2">"</span><span class="s">eth0"</span>
        <span class="pi">-</span> <span class="na">args</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="s">proxy</span>
            <span class="pi">-</span> <span class="s">sidecar</span>
            <span class="pi">-</span> <span class="s">--configPath</span>
            <span class="pi">-</span> <span class="s">/etc/istio/proxy</span>
            <span class="pi">-</span> <span class="s">--binaryPath</span>
            <span class="pi">-</span> <span class="s">/usr/local/bin/envoy</span>
            <span class="pi">-</span> <span class="s">--serviceCluster</span>
            <span class="pi">-</span> <span class="s">productpage</span>
            <span class="pi">-</span> <span class="s">--drainDuration</span>
            <span class="pi">-</span> <span class="s">45s</span>
            <span class="pi">-</span> <span class="s">--parentShutdownDuration</span>
            <span class="pi">-</span> <span class="s">1m0s</span>
            <span class="pi">-</span> <span class="s">--discoveryAddress</span>
            <span class="pi">-</span> <span class="s">istio-pilot.istio-system:15005</span>
            <span class="pi">-</span> <span class="s">--discoveryRefreshDelay</span>
            <span class="pi">-</span> <span class="s">1s</span>
            <span class="pi">-</span> <span class="s">--zipkinAddress</span>
            <span class="pi">-</span> <span class="s">zipkin.istio-system:9411</span>
            <span class="pi">-</span> <span class="s">--connectTimeout</span>
            <span class="pi">-</span> <span class="s">10s</span>
            <span class="pi">-</span> <span class="s">--statsdUdpAddress</span>
            <span class="pi">-</span> <span class="s">istio-mixer.istio-system:9125</span>
            <span class="pi">-</span> <span class="s">--proxyAdminPort</span>
            <span class="pi">-</span> <span class="s2">"</span><span class="s">15000"</span>
            <span class="pi">-</span> <span class="s">--controlPlaneAuthPolicy</span>
            <span class="pi">-</span> <span class="s">MUTUAL_TLS</span>
          <span class="na">env</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">POD_NAME</span>
              <span class="na">valueFrom</span><span class="pi">:</span>
                <span class="na">fieldRef</span><span class="pi">:</span>
                  <span class="na">fieldPath</span><span class="pi">:</span> <span class="s">metadata.name</span>
            <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">POD_NAMESPACE</span>
              <span class="na">valueFrom</span><span class="pi">:</span>
                <span class="na">fieldRef</span><span class="pi">:</span>
                  <span class="na">fieldPath</span><span class="pi">:</span> <span class="s">metadata.namespace</span>
            <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">INSTANCE_IP</span>
              <span class="na">valueFrom</span><span class="pi">:</span>
                <span class="na">fieldRef</span><span class="pi">:</span>
                  <span class="na">fieldPath</span><span class="pi">:</span> <span class="s">status.podIP</span>
          <span class="na">image</span><span class="pi">:</span> <span class="s">docker.io/istio/proxy:0.7.1</span>
          <span class="na">imagePullPolicy</span><span class="pi">:</span> <span class="s">IfNotPresent</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">istio-proxy</span>
          <span class="na">resources</span><span class="pi">:</span> <span class="pi">{}</span>
          <span class="na">securityContext</span><span class="pi">:</span>
            <span class="na">privileged</span><span class="pi">:</span> <span class="no">false</span>
            <span class="na">readOnlyRootFilesystem</span><span class="pi">:</span> <span class="no">true</span>
            <span class="na">runAsUser</span><span class="pi">:</span> <span class="m">1337</span>
          <span class="na">volumeMounts</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="na">mountPath</span><span class="pi">:</span> <span class="s">/etc/istio/proxy</span>
              <span class="na">name</span><span class="pi">:</span> <span class="s">istio-envoy</span>
            <span class="pi">-</span> <span class="na">mountPath</span><span class="pi">:</span> <span class="s">/etc/certs/</span>
              <span class="na">name</span><span class="pi">:</span> <span class="s">istio-certs</span>
              <span class="na">readOnly</span><span class="pi">:</span> <span class="no">true</span>
      <span class="na">initContainers</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="na">args</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="s">-p</span>
            <span class="pi">-</span> <span class="s2">"</span><span class="s">15001"</span>
            <span class="pi">-</span> <span class="s">-u</span>
            <span class="pi">-</span> <span class="s2">"</span><span class="s">1337"</span>
          <span class="na">image</span><span class="pi">:</span> <span class="s">docker.io/istio/proxy_init:0.7.1</span>
          <span class="na">imagePullPolicy</span><span class="pi">:</span> <span class="s">IfNotPresent</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">istio-init</span>
          <span class="na">resources</span><span class="pi">:</span> <span class="pi">{}</span>
          <span class="na">securityContext</span><span class="pi">:</span>
            <span class="na">capabilities</span><span class="pi">:</span>
              <span class="na">add</span><span class="pi">:</span>
                <span class="pi">-</span> <span class="s">NET_ADMIN</span>
        <span class="pi">-</span> <span class="na">args</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="s">-c</span>
            <span class="pi">-</span> <span class="s">sysctl -w kernel.core_pattern=/etc/istio/proxy/core.%e.%p.%t &amp;&amp; ulimit -c</span>
              <span class="s">unlimited</span>
          <span class="na">command</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="s">/bin/sh</span>
          <span class="na">image</span><span class="pi">:</span> <span class="s">alpine</span>
          <span class="na">imagePullPolicy</span><span class="pi">:</span> <span class="s">IfNotPresent</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">enable-core-dump</span>
          <span class="na">resources</span><span class="pi">:</span> <span class="pi">{}</span>
          <span class="na">securityContext</span><span class="pi">:</span>
            <span class="na">privileged</span><span class="pi">:</span> <span class="no">true</span>
      <span class="na">volumes</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="na">emptyDir</span><span class="pi">:</span>
            <span class="na">medium</span><span class="pi">:</span> <span class="s">Memory</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">istio-envoy</span>
        <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">istio-certs</span>
          <span class="na">secret</span><span class="pi">:</span>
            <span class="na">optional</span><span class="pi">:</span> <span class="no">true</span>
            <span class="na">secretName</span><span class="pi">:</span> <span class="s">istio.default</span>
        <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">host-dev</span>
          <span class="na">hostPath</span><span class="pi">:</span>
            <span class="na">path</span><span class="pi">:</span> <span class="s">/dev</span>
            <span class="na">type</span><span class="pi">:</span> <span class="s">Directory</span>
        <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">host-sys</span>
          <span class="na">hostPath</span><span class="pi">:</span>
            <span class="na">path</span><span class="pi">:</span> <span class="s">/sys</span>
            <span class="na">type</span><span class="pi">:</span> <span class="s">Directory</span>
        <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">test-volume</span>
          <span class="na">hostPath</span><span class="pi">:</span>
            <span class="c1"># directory location on host</span>
            <span class="na">path</span><span class="pi">:</span> <span class="s">/bricks/brick1/volume/Images</span>
            <span class="c1"># this field is optional</span>
            <span class="na">type</span><span class="pi">:</span> <span class="s">Directory</span>
<span class="na">status</span><span class="pi">:</span> <span class="pi">{}</span>

<span class="nn">---</span>
<span class="na">apiVersion</span><span class="pi">:</span> <span class="s">extensions/v1beta1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">Ingress</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">gateway-devel</span>
  <span class="na">annotations</span><span class="pi">:</span>
    <span class="s">kubernetes.io/ingress.class</span><span class="pi">:</span> <span class="s2">"</span><span class="s">istio"</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">rules</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">http</span><span class="pi">:</span>
        <span class="na">paths</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">path</span><span class="pi">:</span> <span class="s">/devel-myvm</span>
            <span class="na">backend</span><span class="pi">:</span>
              <span class="na">serviceName</span><span class="pi">:</span> <span class="s">application-devel</span>
              <span class="na">servicePort</span><span class="pi">:</span> <span class="m">9080</span>
</code></pre></div></div>

<p>When the my-libvirt container starts it runs an entry point script for iptables configuration.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1. iptables <span class="nt">-t</span> nat <span class="nt">-D</span> PREROUTING 1
2. iptables <span class="nt">-t</span> nat <span class="nt">-A</span> PREROUTING <span class="nt">-p</span> tcp <span class="nt">-m</span> comment <span class="nt">--comment</span> <span class="s2">"KubeVirt Spice"</span>  <span class="nt">--dport</span> 5900 <span class="nt">-j</span> ACCEPT
3. iptables <span class="nt">-t</span> nat <span class="nt">-A</span> PREROUTING <span class="nt">-p</span> tcp <span class="nt">-m</span> comment <span class="nt">--comment</span> <span class="s2">"KubeVirt virt-manager"</span>  <span class="nt">--dport</span> 16509 <span class="nt">-j</span> ACCEPT
4. iptables <span class="nt">-t</span> nat  <span class="nt">-A</span> PREROUTING <span class="nt">-d</span> 10.96.0.0/12 <span class="nt">-m</span> comment <span class="nt">--comment</span> <span class="s2">"istio/redirect-ip-range-10.96.0.0/12-service cidr"</span> <span class="nt">-j</span> ISTIO_REDIRECT
5. iptables <span class="nt">-t</span> nat  <span class="nt">-A</span> PREROUTING <span class="nt">-d</span> 192.168.0.0/16 <span class="nt">-m</span> comment <span class="nt">--comment</span> <span class="s2">"istio/redirect-ip-range-192.168.0.0/16-Pod cidr"</span> <span class="nt">-j</span> ISTIO_REDIRECT
6. iptables <span class="nt">-t</span> nat  <span class="nt">-A</span> OUTPUT <span class="nt">-d</span> 127.0.0.1/32 <span class="nt">-p</span> tcp <span class="nt">-m</span> comment <span class="nt">--comment</span> <span class="s2">"KubeVirt mesh application port"</span> <span class="nt">--dport</span> 9080 <span class="nt">-j</span> DNAT <span class="nt">--to-destination</span> 10.0.0.2
7. iptables <span class="nt">-t</span> nat  <span class="nt">-A</span> POSTROUTING <span class="nt">-s</span> 127.0.0.1/32 <span class="nt">-d</span> 10.0.0.2/32 <span class="nt">-m</span> comment <span class="nt">--comment</span> <span class="s2">"KubeVirt VM Forward"</span> <span class="nt">-j</span> SNAT <span class="nt">--to-source</span> <span class="sb">`</span>ifconfig eth0 | <span class="nb">grep </span>inet | <span class="nb">awk</span> <span class="s1">'{print $2}'</span>
</code></pre></div></div>

<p>Now let’s explain every one of these lines:</p>

<ol>
  <li>Remove istio ingress connection rule that send all the ingress traffic directly to the envoy proxy (our vm traffic is ingress traffic for our pod)</li>
  <li>Allow ingress connection with spice port to get our libvirt process running in the pod</li>
  <li>Allow ingress connection with virt-manager port to get our libvirt process running in the pod</li>
  <li>Redirect all the traffic that came from the k8s clusters services to the envoy process</li>
  <li>Redirect all the traffic that came from the k8s clusters pods to the envoy process</li>
  <li>Send all the traffic that came from envoy process to our vm by changing the destination ip address to ur vm ip address</li>
  <li>Change the source ip address of the packet send by envoy from localhost to the pod ip address so the virtual machine can return the connection</li>
</ol>

<h3 id="iptables-configuration-conclusions">Iptables configuration conclusions</h3>

<p>With this configuration all the traffic that exit the virtual machine to a k8s service will pass the envoy process and will enter the istio service mash.
Also all the traffic that came into the pod will be pass to envoy and after that it will be send to our virtual machine</p>

<p>Egress data flow in this solution:</p>

<p><img src="../assets/2018-06-03-Research-run-VMs-with-istio-service-mesh/iptables-egress.png" alt="iptables-egress-traffic" /></p>

<p>Ingress data flow in this solution:</p>

<p><img src="../assets/2018-06-03-Research-run-VMs-with-istio-service-mesh/iptables-ingress.png" alt="iptables-ingress-traffic" /></p>

<p>Pros:</p>

<ul>
  <li>No external modules needed</li>
  <li>No external process needed</li>
  <li>All the traffic is handled by the kernel user space not involved</li>
</ul>

<p>Cons:</p>

<ul>
  <li><span style="color:red;">Istio dedicated solution!</span></li>
  <li>Not other process can change the iptables rules</li>
</ul>

<h2 id="iptables-with-a-nat-proxy-process">Iptables with a nat-proxy process</h2>

<p>For this solution a created the following architecture</p>

<p><img src="../assets/2018-06-03-Research-run-VMs-with-istio-service-mesh/nat-proxy.png" alt="nat-proxy-Diagram" /></p>

<p>With the following yaml configuration</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">apiVersion</span><span class="pi">:</span> <span class="s">v1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">Service</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">application-nat-proxt</span>
  <span class="na">labels</span><span class="pi">:</span>
    <span class="na">app</span><span class="pi">:</span> <span class="s">libvirtd-nat-proxt</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">ports</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">port</span><span class="pi">:</span> <span class="m">9080</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s">http</span>
  <span class="na">selector</span><span class="pi">:</span>
    <span class="na">app</span><span class="pi">:</span> <span class="s">libvirtd-nat-proxt</span>
  <span class="na">type</span><span class="pi">:</span> <span class="s">LoadBalancer</span>

<span class="nn">---</span>
<span class="na">apiVersion</span><span class="pi">:</span> <span class="s">v1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">Service</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">libvirtd-client-nat-proxt</span>
  <span class="na">labels</span><span class="pi">:</span>
    <span class="na">app</span><span class="pi">:</span> <span class="s">libvirtd-nat-proxt</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">ports</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">port</span><span class="pi">:</span> <span class="m">16509</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s">client-connection</span>
    <span class="pi">-</span> <span class="na">port</span><span class="pi">:</span> <span class="m">5900</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s">spice</span>
    <span class="pi">-</span> <span class="na">port</span><span class="pi">:</span> <span class="m">22</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s">ssh</span>
  <span class="na">selector</span><span class="pi">:</span>
    <span class="na">app</span><span class="pi">:</span> <span class="s">libvirtd-nat-proxt</span>
  <span class="na">type</span><span class="pi">:</span> <span class="s">LoadBalancer</span>
<span class="nn">---</span>
<span class="na">apiVersion</span><span class="pi">:</span> <span class="s">extensions/v1beta1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">Deployment</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">creationTimestamp</span><span class="pi">:</span> <span class="no">null</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">libvirtd-nat-proxt</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">replicas</span><span class="pi">:</span> <span class="m">1</span>
  <span class="na">strategy</span><span class="pi">:</span> <span class="pi">{}</span>
  <span class="na">template</span><span class="pi">:</span>
    <span class="na">metadata</span><span class="pi">:</span>
      <span class="na">annotations</span><span class="pi">:</span>
        <span class="s">sidecar.istio.io/status</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{"version":"43466efda2266e066fb5ad36f2d1658de02fc9411f6db00ccff561300a2a3c78","initContainers":["istio-init","enable-core-dump"],"containers":["istio-proxy"],"volumes":["istio-envoy","istio-certs"]}'</span>
      <span class="na">creationTimestamp</span><span class="pi">:</span> <span class="no">null</span>
      <span class="na">labels</span><span class="pi">:</span>
        <span class="na">app</span><span class="pi">:</span> <span class="s">libvirtd-nat-proxt</span>
    <span class="na">spec</span><span class="pi">:</span>
      <span class="na">containers</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="na">image</span><span class="pi">:</span> <span class="s">docker.io/sebassch/mylibvirtd:devel</span>
          <span class="na">imagePullPolicy</span><span class="pi">:</span> <span class="s">Always</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">compute</span>
          <span class="na">ports</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="na">containerPort</span><span class="pi">:</span> <span class="m">9080</span>
            <span class="pi">-</span> <span class="na">containerPort</span><span class="pi">:</span> <span class="m">16509</span>
            <span class="pi">-</span> <span class="na">containerPort</span><span class="pi">:</span> <span class="m">5900</span>
            <span class="pi">-</span> <span class="na">containerPort</span><span class="pi">:</span> <span class="m">22</span>
          <span class="na">securityContext</span><span class="pi">:</span>
            <span class="na">capabilities</span><span class="pi">:</span>
              <span class="na">add</span><span class="pi">:</span>
                <span class="pi">-</span> <span class="s">ALL</span>
            <span class="na">privileged</span><span class="pi">:</span> <span class="no">true</span>
            <span class="na">runAsUser</span><span class="pi">:</span> <span class="m">0</span>
          <span class="na">volumeMounts</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="na">mountPath</span><span class="pi">:</span> <span class="s">/var/lib/libvirt/images</span>
              <span class="na">name</span><span class="pi">:</span> <span class="s">test-volume</span>
            <span class="pi">-</span> <span class="na">mountPath</span><span class="pi">:</span> <span class="s">/host-dev</span>
              <span class="na">name</span><span class="pi">:</span> <span class="s">host-dev</span>
            <span class="pi">-</span> <span class="na">mountPath</span><span class="pi">:</span> <span class="s">/host-sys</span>
              <span class="na">name</span><span class="pi">:</span> <span class="s">host-sys</span>
          <span class="na">resources</span><span class="pi">:</span> <span class="pi">{}</span>
          <span class="na">env</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">LIBVIRTD_DEFAULT_NETWORK_DEVICE</span>
              <span class="na">value</span><span class="pi">:</span> <span class="s2">"</span><span class="s">eth0"</span>
        <span class="pi">-</span> <span class="na">image</span><span class="pi">:</span> <span class="s">docker.io/sebassch/mynatproxy:devel</span>
          <span class="na">imagePullPolicy</span><span class="pi">:</span> <span class="s">Always</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">proxy</span>
          <span class="na">resources</span><span class="pi">:</span> <span class="pi">{}</span>
          <span class="na">securityContext</span><span class="pi">:</span>
            <span class="na">privileged</span><span class="pi">:</span> <span class="no">true</span>
            <span class="na">capabilities</span><span class="pi">:</span>
              <span class="na">add</span><span class="pi">:</span>
                <span class="pi">-</span> <span class="s">NET_ADMIN</span>
        <span class="pi">-</span> <span class="na">args</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="s">proxy</span>
            <span class="pi">-</span> <span class="s">sidecar</span>
            <span class="pi">-</span> <span class="s">--configPath</span>
            <span class="pi">-</span> <span class="s">/etc/istio/proxy</span>
            <span class="pi">-</span> <span class="s">--binaryPath</span>
            <span class="pi">-</span> <span class="s">/usr/local/bin/envoy</span>
            <span class="pi">-</span> <span class="s">--serviceCluster</span>
            <span class="pi">-</span> <span class="s">productpage</span>
            <span class="pi">-</span> <span class="s">--drainDuration</span>
            <span class="pi">-</span> <span class="s">45s</span>
            <span class="pi">-</span> <span class="s">--parentShutdownDuration</span>
            <span class="pi">-</span> <span class="s">1m0s</span>
            <span class="pi">-</span> <span class="s">--discoveryAddress</span>
            <span class="pi">-</span> <span class="s">istio-pilot.istio-system:15005</span>
            <span class="pi">-</span> <span class="s">--discoveryRefreshDelay</span>
            <span class="pi">-</span> <span class="s">1s</span>
            <span class="pi">-</span> <span class="s">--zipkinAddress</span>
            <span class="pi">-</span> <span class="s">zipkin.istio-system:9411</span>
            <span class="pi">-</span> <span class="s">--connectTimeout</span>
            <span class="pi">-</span> <span class="s">10s</span>
            <span class="pi">-</span> <span class="s">--statsdUdpAddress</span>
            <span class="pi">-</span> <span class="s">istio-mixer.istio-system:9125</span>
            <span class="pi">-</span> <span class="s">--proxyAdminPort</span>
            <span class="pi">-</span> <span class="s2">"</span><span class="s">15000"</span>
            <span class="pi">-</span> <span class="s">--controlPlaneAuthPolicy</span>
            <span class="pi">-</span> <span class="s">MUTUAL_TLS</span>
          <span class="na">env</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">POD_NAME</span>
              <span class="na">valueFrom</span><span class="pi">:</span>
                <span class="na">fieldRef</span><span class="pi">:</span>
                  <span class="na">fieldPath</span><span class="pi">:</span> <span class="s">metadata.name</span>
            <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">POD_NAMESPACE</span>
              <span class="na">valueFrom</span><span class="pi">:</span>
                <span class="na">fieldRef</span><span class="pi">:</span>
                  <span class="na">fieldPath</span><span class="pi">:</span> <span class="s">metadata.namespace</span>
            <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">INSTANCE_IP</span>
              <span class="na">valueFrom</span><span class="pi">:</span>
                <span class="na">fieldRef</span><span class="pi">:</span>
                  <span class="na">fieldPath</span><span class="pi">:</span> <span class="s">status.podIP</span>
          <span class="na">image</span><span class="pi">:</span> <span class="s">docker.io/istio/proxy:0.7.1</span>
          <span class="na">imagePullPolicy</span><span class="pi">:</span> <span class="s">IfNotPresent</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">istio-proxy</span>
          <span class="na">resources</span><span class="pi">:</span> <span class="pi">{}</span>
          <span class="na">securityContext</span><span class="pi">:</span>
            <span class="na">privileged</span><span class="pi">:</span> <span class="no">false</span>
            <span class="na">readOnlyRootFilesystem</span><span class="pi">:</span> <span class="no">true</span>
            <span class="na">runAsUser</span><span class="pi">:</span> <span class="m">1337</span>
          <span class="na">volumeMounts</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="na">mountPath</span><span class="pi">:</span> <span class="s">/etc/istio/proxy</span>
              <span class="na">name</span><span class="pi">:</span> <span class="s">istio-envoy</span>
            <span class="pi">-</span> <span class="na">mountPath</span><span class="pi">:</span> <span class="s">/etc/certs/</span>
              <span class="na">name</span><span class="pi">:</span> <span class="s">istio-certs</span>
              <span class="na">readOnly</span><span class="pi">:</span> <span class="no">true</span>
      <span class="na">initContainers</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="na">args</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="s">-p</span>
            <span class="pi">-</span> <span class="s2">"</span><span class="s">15001"</span>
            <span class="pi">-</span> <span class="s">-u</span>
            <span class="pi">-</span> <span class="s2">"</span><span class="s">1337"</span>
            <span class="pi">-</span> <span class="s">-i</span>
            <span class="pi">-</span> <span class="s">10.96.0.0/12,192.168.0.0/16</span>
          <span class="na">image</span><span class="pi">:</span> <span class="s">docker.io/istio/proxy_init:0.7.1</span>
          <span class="na">imagePullPolicy</span><span class="pi">:</span> <span class="s">IfNotPresent</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">istio-init</span>
          <span class="na">resources</span><span class="pi">:</span> <span class="pi">{}</span>
          <span class="na">securityContext</span><span class="pi">:</span>
            <span class="na">capabilities</span><span class="pi">:</span>
              <span class="na">add</span><span class="pi">:</span>
                <span class="pi">-</span> <span class="s">NET_ADMIN</span>
        <span class="pi">-</span> <span class="na">args</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="s">-c</span>
            <span class="pi">-</span> <span class="s">sysctl -w kernel.core_pattern=/etc/istio/proxy/core.%e.%p.%t &amp;&amp; ulimit -c</span>
              <span class="s">unlimited</span>
          <span class="na">command</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="s">/bin/sh</span>
          <span class="na">image</span><span class="pi">:</span> <span class="s">alpine</span>
          <span class="na">imagePullPolicy</span><span class="pi">:</span> <span class="s">IfNotPresent</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">enable-core-dump</span>
          <span class="na">resources</span><span class="pi">:</span> <span class="pi">{}</span>
          <span class="na">securityContext</span><span class="pi">:</span>
            <span class="na">privileged</span><span class="pi">:</span> <span class="no">true</span>
      <span class="na">volumes</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="na">emptyDir</span><span class="pi">:</span>
            <span class="na">medium</span><span class="pi">:</span> <span class="s">Memory</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">istio-envoy</span>
        <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">istio-certs</span>
          <span class="na">secret</span><span class="pi">:</span>
            <span class="na">optional</span><span class="pi">:</span> <span class="no">true</span>
            <span class="na">secretName</span><span class="pi">:</span> <span class="s">istio.default</span>
        <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">host-dev</span>
          <span class="na">hostPath</span><span class="pi">:</span>
            <span class="na">path</span><span class="pi">:</span> <span class="s">/dev</span>
            <span class="na">type</span><span class="pi">:</span> <span class="s">Directory</span>
        <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">host-sys</span>
          <span class="na">hostPath</span><span class="pi">:</span>
            <span class="na">path</span><span class="pi">:</span> <span class="s">/sys</span>
            <span class="na">type</span><span class="pi">:</span> <span class="s">Directory</span>
        <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">test-volume</span>
          <span class="na">hostPath</span><span class="pi">:</span>
            <span class="c1"># directory location on host</span>
            <span class="na">path</span><span class="pi">:</span> <span class="s">/bricks/brick1/volume/Images</span>
            <span class="c1"># this field is optional</span>
            <span class="na">type</span><span class="pi">:</span> <span class="s">Directory</span>
<span class="na">status</span><span class="pi">:</span> <span class="pi">{}</span>

<span class="nn">---</span>
<span class="na">apiVersion</span><span class="pi">:</span> <span class="s">extensions/v1beta1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">Ingress</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">gateway-nat-proxt</span>
  <span class="na">annotations</span><span class="pi">:</span>
    <span class="s">kubernetes.io/ingress.class</span><span class="pi">:</span> <span class="s2">"</span><span class="s">istio"</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">rules</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">http</span><span class="pi">:</span>
        <span class="na">paths</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">path</span><span class="pi">:</span> <span class="s">/nat-proxt-myvm</span>
            <span class="na">backend</span><span class="pi">:</span>
              <span class="na">serviceName</span><span class="pi">:</span> <span class="s">application-nat-proxt</span>
              <span class="na">servicePort</span><span class="pi">:</span> <span class="m">9080</span>
</code></pre></div></div>

<p>When the mynatproxy container starts it runs an entry point script for iptables configuration.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1. iptables -t nat -I PREROUTING 1 -p tcp -s 10.0.1.2 -m comment --comment "nat-proxy redirect" -j REDIRECT --to-ports 8080
2. iptables -t nat -I OUTPUT 1 -p tcp -s 10.0.1.2 -j ACCEPT
3. iptables -t nat -I POSTROUTING 1 -s 10.0.1.2 -p udp -m comment --comment "nat udp connections" -j MASQUERADE
</code></pre></div></div>

<p>Now let’s explain every one of these lines:</p>

<ol>
  <li>Redirect all the tcp traffic that came from the virtual machine to our proxy on port 8080</li>
  <li>Accept all the traffic that go from the pod to the virtual machine</li>
  <li>Nat all the udp traffic that came from the virtual machine</li>
</ol>

<p>This solution uses a container I created that has two processes inside, one for the egress traffic of the virtual machine and one for the ingress traffic.
For the egress traffic I used a program writen in golang, and for the ingress traffic I used haproxy.</p>

<p>The nat-proxy used a system call to get the original destination address and port that it’s being redirected to us from the iptables rules I created.</p>

<p>The extract function:</p>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">func</span> <span class="n">getOriginalDst</span><span class="p">(</span><span class="n">clientConn</span> <span class="o">*</span><span class="n">net</span><span class="o">.</span><span class="n">TCPConn</span><span class="p">)</span> <span class="p">(</span><span class="n">ipv4</span> <span class="kt">string</span><span class="p">,</span> <span class="n">port</span> <span class="kt">uint16</span><span class="p">,</span> <span class="n">newTCPConn</span> <span class="o">*</span><span class="n">net</span><span class="o">.</span><span class="n">TCPConn</span><span class="p">,</span> <span class="n">err</span> <span class="kt">error</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="n">clientConn</span> <span class="o">==</span> <span class="no">nil</span> <span class="p">{</span>
        <span class="n">log</span><span class="o">.</span><span class="n">Printf</span><span class="p">(</span><span class="s">"copy(): oops, dst is nil!"</span><span class="p">)</span>
        <span class="n">err</span> <span class="o">=</span> <span class="n">errors</span><span class="o">.</span><span class="n">New</span><span class="p">(</span><span class="s">"ERR: clientConn is nil"</span><span class="p">)</span>
        <span class="k">return</span>
    <span class="p">}</span>

    <span class="c">// test if the underlying fd is nil</span>
    <span class="n">remoteAddr</span> <span class="o">:=</span> <span class="n">clientConn</span><span class="o">.</span><span class="n">RemoteAddr</span><span class="p">()</span>
    <span class="k">if</span> <span class="n">remoteAddr</span> <span class="o">==</span> <span class="no">nil</span> <span class="p">{</span>
        <span class="n">log</span><span class="o">.</span><span class="n">Printf</span><span class="p">(</span><span class="s">"getOriginalDst(): oops, clientConn.fd is nil!"</span><span class="p">)</span>
        <span class="n">err</span> <span class="o">=</span> <span class="n">errors</span><span class="o">.</span><span class="n">New</span><span class="p">(</span><span class="s">"ERR: clientConn.fd is nil"</span><span class="p">)</span>
        <span class="k">return</span>
    <span class="p">}</span>

    <span class="n">srcipport</span> <span class="o">:=</span> <span class="n">fmt</span><span class="o">.</span><span class="n">Sprintf</span><span class="p">(</span><span class="s">"%v"</span><span class="p">,</span> <span class="n">clientConn</span><span class="o">.</span><span class="n">RemoteAddr</span><span class="p">())</span>

    <span class="n">newTCPConn</span> <span class="o">=</span> <span class="no">nil</span>
    <span class="c">// net.TCPConn.File() will cause the receiver's (clientConn) socket to be placed in blocking mode.</span>
    <span class="c">// The workaround is to take the File returned by .File(), do getsockopt() to get the original</span>
    <span class="c">// destination, then create a new *net.TCPConn by calling net.Conn.FileConn().  The new TCPConn</span>
    <span class="c">// will be in non-blocking mode.  What a pain.</span>
    <span class="n">clientConnFile</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">clientConn</span><span class="o">.</span><span class="n">File</span><span class="p">()</span>
    <span class="k">if</span> <span class="n">err</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
        <span class="n">log</span><span class="o">.</span><span class="n">Printf</span><span class="p">(</span><span class="s">"GETORIGINALDST|%v-&gt;?-&gt;FAILEDTOBEDETERMINED|ERR: could not get a copy of the client connection's file object"</span><span class="p">,</span> <span class="n">srcipport</span><span class="p">)</span>
        <span class="k">return</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="n">clientConn</span><span class="o">.</span><span class="n">Close</span><span class="p">()</span>
    <span class="p">}</span>

    <span class="c">// Get original destination</span>
    <span class="c">// this is the only syscall in the Golang libs that I can find that returns 16 bytes</span>
    <span class="c">// Example result: &amp;{Multiaddr:[2 0 31 144 206 190 36 45 0 0 0 0 0 0 0 0] Interface:0}</span>
    <span class="c">// port starts at the 3rd byte and is 2 bytes long (31 144 = port 8080)</span>
    <span class="c">// IPv4 address starts at the 5th byte, 4 bytes long (206 190 36 45)</span>
    <span class="n">addr</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">syscall</span><span class="o">.</span><span class="n">GetsockoptIPv6Mreq</span><span class="p">(</span><span class="kt">int</span><span class="p">(</span><span class="n">clientConnFile</span><span class="o">.</span><span class="n">Fd</span><span class="p">()),</span> <span class="n">syscall</span><span class="o">.</span><span class="n">IPPROTO_IP</span><span class="p">,</span> <span class="n">SO_ORIGINAL_DST</span><span class="p">)</span>
    <span class="n">log</span><span class="o">.</span><span class="n">Printf</span><span class="p">(</span><span class="s">"getOriginalDst(): SO_ORIGINAL_DST=%+v</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">addr</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">err</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
        <span class="n">log</span><span class="o">.</span><span class="n">Printf</span><span class="p">(</span><span class="s">"GETORIGINALDST|%v-&gt;?-&gt;FAILEDTOBEDETERMINED|ERR: getsocketopt(SO_ORIGINAL_DST) failed: %v"</span><span class="p">,</span> <span class="n">srcipport</span><span class="p">,</span> <span class="n">err</span><span class="p">)</span>
        <span class="k">return</span>
    <span class="p">}</span>
    <span class="n">newConn</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">net</span><span class="o">.</span><span class="n">FileConn</span><span class="p">(</span><span class="n">clientConnFile</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">err</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
        <span class="n">log</span><span class="o">.</span><span class="n">Printf</span><span class="p">(</span><span class="s">"GETORIGINALDST|%v-&gt;?-&gt;%v|ERR: could not create a FileConn fron clientConnFile=%+v: %v"</span><span class="p">,</span> <span class="n">srcipport</span><span class="p">,</span> <span class="n">addr</span><span class="p">,</span> <span class="n">clientConnFile</span><span class="p">,</span> <span class="n">err</span><span class="p">)</span>
        <span class="k">return</span>
    <span class="p">}</span>
    <span class="k">if</span> <span class="n">_</span><span class="p">,</span> <span class="n">ok</span> <span class="o">:=</span> <span class="n">newConn</span><span class="o">.</span><span class="p">(</span><span class="o">*</span><span class="n">net</span><span class="o">.</span><span class="n">TCPConn</span><span class="p">);</span> <span class="n">ok</span> <span class="p">{</span>
        <span class="n">newTCPConn</span> <span class="o">=</span> <span class="n">newConn</span><span class="o">.</span><span class="p">(</span><span class="o">*</span><span class="n">net</span><span class="o">.</span><span class="n">TCPConn</span><span class="p">)</span>
        <span class="n">clientConnFile</span><span class="o">.</span><span class="n">Close</span><span class="p">()</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="n">errmsg</span> <span class="o">:=</span> <span class="n">fmt</span><span class="o">.</span><span class="n">Sprintf</span><span class="p">(</span><span class="s">"ERR: newConn is not a *net.TCPConn, instead it is: %T (%v)"</span><span class="p">,</span> <span class="n">newConn</span><span class="p">,</span> <span class="n">newConn</span><span class="p">)</span>
        <span class="n">log</span><span class="o">.</span><span class="n">Printf</span><span class="p">(</span><span class="s">"GETORIGINALDST|%v-&gt;?-&gt;%v|%s"</span><span class="p">,</span> <span class="n">srcipport</span><span class="p">,</span> <span class="n">addr</span><span class="p">,</span> <span class="n">errmsg</span><span class="p">)</span>
        <span class="n">err</span> <span class="o">=</span> <span class="n">errors</span><span class="o">.</span><span class="n">New</span><span class="p">(</span><span class="n">errmsg</span><span class="p">)</span>
        <span class="k">return</span>
    <span class="p">}</span>

    <span class="n">ipv4</span> <span class="o">=</span> <span class="n">itod</span><span class="p">(</span><span class="kt">uint</span><span class="p">(</span><span class="n">addr</span><span class="o">.</span><span class="n">Multiaddr</span><span class="p">[</span><span class="m">4</span><span class="p">]))</span> <span class="o">+</span> <span class="s">"."</span> <span class="o">+</span>
        <span class="n">itod</span><span class="p">(</span><span class="kt">uint</span><span class="p">(</span><span class="n">addr</span><span class="o">.</span><span class="n">Multiaddr</span><span class="p">[</span><span class="m">5</span><span class="p">]))</span> <span class="o">+</span> <span class="s">"."</span> <span class="o">+</span>
        <span class="n">itod</span><span class="p">(</span><span class="kt">uint</span><span class="p">(</span><span class="n">addr</span><span class="o">.</span><span class="n">Multiaddr</span><span class="p">[</span><span class="m">6</span><span class="p">]))</span> <span class="o">+</span> <span class="s">"."</span> <span class="o">+</span>
        <span class="n">itod</span><span class="p">(</span><span class="kt">uint</span><span class="p">(</span><span class="n">addr</span><span class="o">.</span><span class="n">Multiaddr</span><span class="p">[</span><span class="m">7</span><span class="p">]))</span>
    <span class="n">port</span> <span class="o">=</span> <span class="kt">uint16</span><span class="p">(</span><span class="n">addr</span><span class="o">.</span><span class="n">Multiaddr</span><span class="p">[</span><span class="m">2</span><span class="p">])</span><span class="o">&lt;&lt;</span><span class="m">8</span> <span class="o">+</span> <span class="kt">uint16</span><span class="p">(</span><span class="n">addr</span><span class="o">.</span><span class="n">Multiaddr</span><span class="p">[</span><span class="m">3</span><span class="p">])</span>

    <span class="k">return</span>
<span class="p">}</span>
</code></pre></div></div>

<p>After we get the original destination address and port we start a connection to it and copy all the packets.</p>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">var</span> <span class="n">streamWait</span> <span class="n">sync</span><span class="o">.</span><span class="n">WaitGroup</span>
<span class="n">streamWait</span><span class="o">.</span><span class="n">Add</span><span class="p">(</span><span class="m">2</span><span class="p">)</span>

<span class="n">streamConn</span> <span class="o">:=</span> <span class="k">func</span><span class="p">(</span><span class="n">dst</span> <span class="n">io</span><span class="o">.</span><span class="n">Writer</span><span class="p">,</span> <span class="n">src</span> <span class="n">io</span><span class="o">.</span><span class="n">Reader</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">io</span><span class="o">.</span><span class="n">Copy</span><span class="p">(</span><span class="n">dst</span><span class="p">,</span> <span class="n">src</span><span class="p">)</span>
    <span class="n">streamWait</span><span class="o">.</span><span class="n">Done</span><span class="p">()</span>
<span class="p">}</span>

<span class="k">go</span> <span class="n">streamConn</span><span class="p">(</span><span class="n">remoteConn</span><span class="p">,</span> <span class="n">VMconn</span><span class="p">)</span>
<span class="k">go</span> <span class="n">streamConn</span><span class="p">(</span><span class="n">VMconn</span><span class="p">,</span> <span class="n">remoteConn</span><span class="p">)</span>

<span class="n">streamWait</span><span class="o">.</span><span class="n">Wait</span><span class="p">()</span>
</code></pre></div></div>

<p>The Haproxy help us with the ingress traffic with the follow configuration</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>defaults
  mode tcp
frontend main
  bind *:9080
  default_backend guest
backend guest
  server guest 10.0.1.2:9080 maxconn 2048
</code></pre></div></div>

<p>It sends all the traffic to our virtual machine on the service port the machine is listening.</p>

<p><a href="https://github.com/SchSeba/NatProxy">Code repository</a></p>

<h3 id="nat-proxy-conclusions">nat proxy conclusions</h3>

<p>This solution is a general solution, not a dedicated solution to istio only. Its make the vm traffic look like a regular process inside the pod so it will work with any sidecars projects</p>

<p>Egress data flow in this solution:</p>

<p><img src="../assets/2018-06-03-Research-run-VMs-with-istio-service-mesh/nat-proxy-egress-traffic.png" alt="nat-proxy-egress-traffic" /></p>

<p>Ingress data flow in this solution:</p>

<p><img src="../assets/2018-06-03-Research-run-VMs-with-istio-service-mesh/nat-proxy-ingress.png" alt="nat-proxy-ingress-traffic" /></p>

<p>Pros:</p>

<ul>
  <li>No external modules needed</li>
  <li>Works with any sidecar solution</li>
</ul>

<p>Cons:</p>

<ul>
  <li>Not other process can change the iptables rules</li>
  <li>External process needed</li>
  <li>The traffic is passed to user space</li>
  <li>Only support ingress TCP connection</li>
</ul>

<h2 id="iptables-with-a-trasperent-proxy-process">Iptables with a trasperent-proxy process</h2>

<p>This is the last solution I used in my research, it use a kernel module named TPROXY The <a href="https://www.kernel.org/doc/Documentation/networking/tproxy.txt">official documentation</a> from the linux kernel documentation.</p>

<p>For this solution I created the following architecture</p>

<p><img src="../assets/2018-06-03-Research-run-VMs-with-istio-service-mesh/semi-tproxy-diagram.png" alt="semi-tproxy-Diagram" /></p>

<p>With the follow yaml configuration</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">apiVersion</span><span class="pi">:</span> <span class="s">v1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">Service</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">application-devel</span>
  <span class="na">labels</span><span class="pi">:</span>
    <span class="na">app</span><span class="pi">:</span> <span class="s">libvirtd-devel</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">ports</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">port</span><span class="pi">:</span> <span class="m">9080</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s">http</span>
  <span class="na">selector</span><span class="pi">:</span>
    <span class="na">app</span><span class="pi">:</span> <span class="s">libvirtd-devel</span>
  <span class="na">type</span><span class="pi">:</span> <span class="s">LoadBalancer</span>

<span class="nn">---</span>
<span class="na">apiVersion</span><span class="pi">:</span> <span class="s">v1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">Service</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">libvirtd-client-devel</span>
  <span class="na">labels</span><span class="pi">:</span>
    <span class="na">app</span><span class="pi">:</span> <span class="s">libvirtd-devel</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">ports</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">port</span><span class="pi">:</span> <span class="m">16509</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s">client-connection</span>
    <span class="pi">-</span> <span class="na">port</span><span class="pi">:</span> <span class="m">5900</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s">spice</span>
    <span class="pi">-</span> <span class="na">port</span><span class="pi">:</span> <span class="m">22</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s">ssh</span>
  <span class="na">selector</span><span class="pi">:</span>
    <span class="na">app</span><span class="pi">:</span> <span class="s">libvirtd-devel</span>
  <span class="na">type</span><span class="pi">:</span> <span class="s">LoadBalancer</span>
<span class="nn">---</span>
<span class="na">apiVersion</span><span class="pi">:</span> <span class="s">extensions/v1beta1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">Deployment</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">creationTimestamp</span><span class="pi">:</span> <span class="no">null</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">libvirtd-devel</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">replicas</span><span class="pi">:</span> <span class="m">1</span>
  <span class="na">strategy</span><span class="pi">:</span> <span class="pi">{}</span>
  <span class="na">template</span><span class="pi">:</span>
    <span class="na">metadata</span><span class="pi">:</span>
      <span class="na">annotations</span><span class="pi">:</span>
        <span class="s">sidecar.istio.io/status</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{"version":"43466efda2266e066fb5ad36f2d1658de02fc9411f6db00ccff561300a2a3c78","initContainers":["istio-init","enable-core-dump"],"containers":["istio-proxy"],"volumes":["istio-envoy","istio-certs"]}'</span>
      <span class="na">creationTimestamp</span><span class="pi">:</span> <span class="no">null</span>
      <span class="na">labels</span><span class="pi">:</span>
        <span class="na">app</span><span class="pi">:</span> <span class="s">libvirtd-devel</span>
    <span class="na">spec</span><span class="pi">:</span>
      <span class="na">containers</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="na">image</span><span class="pi">:</span> <span class="s">docker.io/sebassch/mylibvirtd:devel</span>
          <span class="na">imagePullPolicy</span><span class="pi">:</span> <span class="s">Always</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">compute</span>
          <span class="na">ports</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="na">containerPort</span><span class="pi">:</span> <span class="m">9080</span>
            <span class="pi">-</span> <span class="na">containerPort</span><span class="pi">:</span> <span class="m">16509</span>
            <span class="pi">-</span> <span class="na">containerPort</span><span class="pi">:</span> <span class="m">5900</span>
            <span class="pi">-</span> <span class="na">containerPort</span><span class="pi">:</span> <span class="m">22</span>
          <span class="na">securityContext</span><span class="pi">:</span>
            <span class="na">capabilities</span><span class="pi">:</span>
              <span class="na">add</span><span class="pi">:</span>
                <span class="pi">-</span> <span class="s">ALL</span>
            <span class="na">privileged</span><span class="pi">:</span> <span class="no">true</span>
            <span class="na">runAsUser</span><span class="pi">:</span> <span class="m">0</span>
          <span class="na">volumeMounts</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="na">mountPath</span><span class="pi">:</span> <span class="s">/var/lib/libvirt/images</span>
              <span class="na">name</span><span class="pi">:</span> <span class="s">test-volume</span>
            <span class="pi">-</span> <span class="na">mountPath</span><span class="pi">:</span> <span class="s">/host-dev</span>
              <span class="na">name</span><span class="pi">:</span> <span class="s">host-dev</span>
            <span class="pi">-</span> <span class="na">mountPath</span><span class="pi">:</span> <span class="s">/host-sys</span>
              <span class="na">name</span><span class="pi">:</span> <span class="s">host-sys</span>
          <span class="na">resources</span><span class="pi">:</span> <span class="pi">{}</span>
          <span class="na">env</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">LIBVIRTD_DEFAULT_NETWORK_DEVICE</span>
              <span class="na">value</span><span class="pi">:</span> <span class="s2">"</span><span class="s">eth0"</span>
        <span class="pi">-</span> <span class="na">image</span><span class="pi">:</span> <span class="s">docker.io/sebassch/mytproxy:devel</span>
          <span class="na">imagePullPolicy</span><span class="pi">:</span> <span class="s">Always</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">proxy</span>
          <span class="na">resources</span><span class="pi">:</span> <span class="pi">{}</span>
          <span class="na">securityContext</span><span class="pi">:</span>
            <span class="na">privileged</span><span class="pi">:</span> <span class="no">true</span>
            <span class="na">capabilities</span><span class="pi">:</span>
              <span class="na">add</span><span class="pi">:</span>
                <span class="pi">-</span> <span class="s">NET_ADMIN</span>
        <span class="pi">-</span> <span class="na">args</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="s">proxy</span>
            <span class="pi">-</span> <span class="s">sidecar</span>
            <span class="pi">-</span> <span class="s">--configPath</span>
            <span class="pi">-</span> <span class="s">/etc/istio/proxy</span>
            <span class="pi">-</span> <span class="s">--binaryPath</span>
            <span class="pi">-</span> <span class="s">/usr/local/bin/envoy</span>
            <span class="pi">-</span> <span class="s">--serviceCluster</span>
            <span class="pi">-</span> <span class="s">productpage</span>
            <span class="pi">-</span> <span class="s">--drainDuration</span>
            <span class="pi">-</span> <span class="s">45s</span>
            <span class="pi">-</span> <span class="s">--parentShutdownDuration</span>
            <span class="pi">-</span> <span class="s">1m0s</span>
            <span class="pi">-</span> <span class="s">--discoveryAddress</span>
            <span class="pi">-</span> <span class="s">istio-pilot.istio-system:15005</span>
            <span class="pi">-</span> <span class="s">--discoveryRefreshDelay</span>
            <span class="pi">-</span> <span class="s">1s</span>
            <span class="pi">-</span> <span class="s">--zipkinAddress</span>
            <span class="pi">-</span> <span class="s">zipkin.istio-system:9411</span>
            <span class="pi">-</span> <span class="s">--connectTimeout</span>
            <span class="pi">-</span> <span class="s">10s</span>
            <span class="pi">-</span> <span class="s">--statsdUdpAddress</span>
            <span class="pi">-</span> <span class="s">istio-mixer.istio-system:9125</span>
            <span class="pi">-</span> <span class="s">--proxyAdminPort</span>
            <span class="pi">-</span> <span class="s2">"</span><span class="s">15000"</span>
            <span class="pi">-</span> <span class="s">--controlPlaneAuthPolicy</span>
            <span class="pi">-</span> <span class="s">MUTUAL_TLS</span>
          <span class="na">env</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">POD_NAME</span>
              <span class="na">valueFrom</span><span class="pi">:</span>
                <span class="na">fieldRef</span><span class="pi">:</span>
                  <span class="na">fieldPath</span><span class="pi">:</span> <span class="s">metadata.name</span>
            <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">POD_NAMESPACE</span>
              <span class="na">valueFrom</span><span class="pi">:</span>
                <span class="na">fieldRef</span><span class="pi">:</span>
                  <span class="na">fieldPath</span><span class="pi">:</span> <span class="s">metadata.namespace</span>
            <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">INSTANCE_IP</span>
              <span class="na">valueFrom</span><span class="pi">:</span>
                <span class="na">fieldRef</span><span class="pi">:</span>
                  <span class="na">fieldPath</span><span class="pi">:</span> <span class="s">status.podIP</span>
          <span class="na">image</span><span class="pi">:</span> <span class="s">docker.io/istio/proxy:0.7.1</span>
          <span class="na">imagePullPolicy</span><span class="pi">:</span> <span class="s">IfNotPresent</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">istio-proxy</span>
          <span class="na">resources</span><span class="pi">:</span> <span class="pi">{}</span>
          <span class="na">securityContext</span><span class="pi">:</span>
            <span class="na">privileged</span><span class="pi">:</span> <span class="no">false</span>
            <span class="na">readOnlyRootFilesystem</span><span class="pi">:</span> <span class="no">true</span>
            <span class="na">runAsUser</span><span class="pi">:</span> <span class="m">1337</span>
          <span class="na">volumeMounts</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="na">mountPath</span><span class="pi">:</span> <span class="s">/etc/istio/proxy</span>
              <span class="na">name</span><span class="pi">:</span> <span class="s">istio-envoy</span>
            <span class="pi">-</span> <span class="na">mountPath</span><span class="pi">:</span> <span class="s">/etc/certs/</span>
              <span class="na">name</span><span class="pi">:</span> <span class="s">istio-certs</span>
              <span class="na">readOnly</span><span class="pi">:</span> <span class="no">true</span>
      <span class="na">initContainers</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="na">args</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="s">-p</span>
            <span class="pi">-</span> <span class="s2">"</span><span class="s">15001"</span>
            <span class="pi">-</span> <span class="s">-u</span>
            <span class="pi">-</span> <span class="s2">"</span><span class="s">1337"</span>
            <span class="pi">-</span> <span class="s">-i</span>
            <span class="pi">-</span> <span class="s">10.96.0.0/12,192.168.0.0/16</span>
          <span class="na">image</span><span class="pi">:</span> <span class="s">docker.io/istio/proxy_init:0.7.1</span>
          <span class="na">imagePullPolicy</span><span class="pi">:</span> <span class="s">IfNotPresent</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">istio-init</span>
          <span class="na">resources</span><span class="pi">:</span> <span class="pi">{}</span>
          <span class="na">securityContext</span><span class="pi">:</span>
            <span class="na">capabilities</span><span class="pi">:</span>
              <span class="na">add</span><span class="pi">:</span>
                <span class="pi">-</span> <span class="s">NET_ADMIN</span>
        <span class="pi">-</span> <span class="na">args</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="s">-c</span>
            <span class="pi">-</span> <span class="s">sysctl -w kernel.core_pattern=/etc/istio/proxy/core.%e.%p.%t &amp;&amp; ulimit -c</span>
              <span class="s">unlimited</span>
          <span class="na">command</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="s">/bin/sh</span>
          <span class="na">image</span><span class="pi">:</span> <span class="s">alpine</span>
          <span class="na">imagePullPolicy</span><span class="pi">:</span> <span class="s">IfNotPresent</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">enable-core-dump</span>
          <span class="na">resources</span><span class="pi">:</span> <span class="pi">{}</span>
          <span class="na">securityContext</span><span class="pi">:</span>
            <span class="na">privileged</span><span class="pi">:</span> <span class="no">true</span>
      <span class="na">volumes</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="na">emptyDir</span><span class="pi">:</span>
            <span class="na">medium</span><span class="pi">:</span> <span class="s">Memory</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">istio-envoy</span>
        <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">istio-certs</span>
          <span class="na">secret</span><span class="pi">:</span>
            <span class="na">optional</span><span class="pi">:</span> <span class="no">true</span>
            <span class="na">secretName</span><span class="pi">:</span> <span class="s">istio.default</span>
        <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">host-dev</span>
          <span class="na">hostPath</span><span class="pi">:</span>
            <span class="na">path</span><span class="pi">:</span> <span class="s">/dev</span>
            <span class="na">type</span><span class="pi">:</span> <span class="s">Directory</span>
        <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">host-sys</span>
          <span class="na">hostPath</span><span class="pi">:</span>
            <span class="na">path</span><span class="pi">:</span> <span class="s">/sys</span>
            <span class="na">type</span><span class="pi">:</span> <span class="s">Directory</span>
        <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">test-volume</span>
          <span class="na">hostPath</span><span class="pi">:</span>
            <span class="c1"># directory location on host</span>
            <span class="na">path</span><span class="pi">:</span> <span class="s">/bricks/brick1/volume/Images</span>
            <span class="c1"># this field is optional</span>
            <span class="na">type</span><span class="pi">:</span> <span class="s">Directory</span>
<span class="na">status</span><span class="pi">:</span> <span class="pi">{}</span>

<span class="nn">---</span>
<span class="na">apiVersion</span><span class="pi">:</span> <span class="s">extensions/v1beta1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">Ingress</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">gateway-devel</span>
  <span class="na">annotations</span><span class="pi">:</span>
    <span class="s">kubernetes.io/ingress.class</span><span class="pi">:</span> <span class="s2">"</span><span class="s">istio"</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">rules</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">http</span><span class="pi">:</span>
        <span class="na">paths</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">path</span><span class="pi">:</span> <span class="s">/devel-myvm</span>
            <span class="na">backend</span><span class="pi">:</span>
              <span class="na">serviceName</span><span class="pi">:</span> <span class="s">application-devel</span>
              <span class="na">servicePort</span><span class="pi">:</span> <span class="m">9080</span>
</code></pre></div></div>

<p>When the tproxy container starts it runs an entry point script for iptables configuration but this time the proxy redirect came in the mangle table and not in the nat table that because TPROXY module avilable only in the mangle table.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>TPROXY
This target is only valid in the mangle table, in the
PREROUTING chain and user-defined chains which are only
called from this chain.  It redirects the packet to a local
socket without changing the packet header in any way. It can
also change the mark value which can then be used in
advanced routing rules.
</code></pre></div></div>

<p>iptables rules:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>iptables <span class="nt">-t</span> mangle <span class="nt">-vL</span>
iptables <span class="nt">-t</span> mangle <span class="nt">-N</span> KUBEVIRT_DIVERT
iptables <span class="nt">-t</span> mangle <span class="nt">-A</span> KUBEVIRT_DIVERT <span class="nt">-j</span> MARK <span class="nt">--set-mark</span> 8
iptables <span class="nt">-t</span> mangle <span class="nt">-A</span> KUBEVIRT_DIVERT <span class="nt">-j</span> ACCEPT

<span class="nv">table</span><span class="o">=</span>mangle
iptables <span class="nt">-t</span> <span class="k">${</span><span class="nv">table</span><span class="k">}</span> <span class="nt">-N</span> KUBEVIRT_INBOUND
iptables <span class="nt">-t</span> <span class="k">${</span><span class="nv">table</span><span class="k">}</span> <span class="nt">-A</span> PREROUTING <span class="nt">-p</span> tcp <span class="nt">-m</span> comment <span class="nt">--comment</span> <span class="s2">"KubeVirt Spice"</span>  <span class="nt">--dport</span> 5900 <span class="nt">-j</span> RETURN
iptables <span class="nt">-t</span> <span class="k">${</span><span class="nv">table</span><span class="k">}</span> <span class="nt">-A</span> PREROUTING <span class="nt">-p</span> tcp <span class="nt">-m</span> comment <span class="nt">--comment</span> <span class="s2">"KubeVirt virt-manager"</span>  <span class="nt">--dport</span> 16509 <span class="nt">-j</span> RETURN
iptables <span class="nt">-t</span> <span class="k">${</span><span class="nv">table</span><span class="k">}</span> <span class="nt">-A</span> PREROUTING <span class="nt">-p</span> tcp <span class="nt">-i</span> vnet0 <span class="nt">-j</span> KUBEVIRT_INBOUND

iptables <span class="nt">-t</span> <span class="k">${</span><span class="nv">table</span><span class="k">}</span> <span class="nt">-N</span> KUBEVIRT_TPROXY
iptables <span class="nt">-t</span> <span class="k">${</span><span class="nv">table</span><span class="k">}</span> <span class="nt">-A</span> KUBEVIRT_TPROXY <span class="o">!</span> <span class="nt">-d</span> 127.0.0.1/32 <span class="nt">-p</span> tcp <span class="nt">-j</span> TPROXY <span class="nt">--tproxy-mark</span> 8/0xffffffff <span class="nt">--on-port</span> 9401
<span class="c">#iptables -t mangle -A KUBEVIRT_TPROXY ! -d 127.0.0.1/32 -p udp -j TPROXY --tproxy-mark 8/0xffffffff --on-port 8080</span>

<span class="c"># If an inbound packet belongs to an established socket, route it to the</span>
<span class="c"># loopback interface.</span>
iptables <span class="nt">-t</span> <span class="k">${</span><span class="nv">table</span><span class="k">}</span> <span class="nt">-A</span> KUBEVIRT_INBOUND <span class="nt">-p</span> tcp <span class="nt">-m</span> socket <span class="nt">-j</span> KUBEVIRT_DIVERT
<span class="c">#iptables -t mangle -A KUBEVIRT_INBOUND -p udp -m socket -j KUBEVIRT_DIVERT</span>

<span class="c"># Otherwise, it's a new connection. Redirect it using TPROXY.</span>
iptables <span class="nt">-t</span> <span class="k">${</span><span class="nv">table</span><span class="k">}</span> <span class="nt">-A</span> KUBEVIRT_INBOUND <span class="nt">-p</span> tcp <span class="nt">-j</span> KUBEVIRT_TPROXY
<span class="c">#iptables -t mangle -A KUBEVIRT_INBOUND -p udp -j KUBEVIRT_TPROXY</span>
iptables <span class="nt">-t</span> <span class="k">${</span><span class="nv">table</span><span class="k">}</span> <span class="nt">-I</span> OUTPUT 1 <span class="nt">-d</span> 10.0.1.2 <span class="nt">-j</span> ACCEPT

<span class="nv">table</span><span class="o">=</span>nat
<span class="c"># Remove vm Connection from iptables rules</span>
iptables <span class="nt">-t</span> <span class="k">${</span><span class="nv">table</span><span class="k">}</span> <span class="nt">-I</span> PREROUTING 1 <span class="nt">-s</span> 10.0.1.2 <span class="nt">-j</span> ACCEPT
iptables <span class="nt">-t</span> <span class="k">${</span><span class="nv">table</span><span class="k">}</span> <span class="nt">-I</span> OUTPUT 1 <span class="nt">-d</span> 10.0.1.2 <span class="nt">-j</span> ACCEPT

<span class="c"># Allow guest -&gt; world -- using nat for UDP</span>
iptables <span class="nt">-t</span> <span class="k">${</span><span class="nv">table</span><span class="k">}</span> <span class="nt">-I</span> POSTROUTING 1 <span class="nt">-s</span> 10.0.1.2 <span class="nt">-p</span> udp <span class="nt">-j</span> MASQUERADE
</code></pre></div></div>

<p>For this solution we also need to load the bridge kernel module</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>modprobe bridge
</code></pre></div></div>

<p>And create some ebtables rules so egress and ingress traffict from the virtial machine will exit the l2 rules and pass to the l3 rules:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  ebtables <span class="nt">-t</span> broute <span class="nt">-F</span> <span class="c"># Flush the table</span>
    <span class="c"># inbound traffic</span>
    ebtables <span class="nt">-t</span> broute <span class="nt">-A</span> BROUTING <span class="nt">-p</span> IPv4 <span class="nt">--ip-dst</span> 10.0.1.2 <span class="se">\</span>
    <span class="nt">-j</span> redirect <span class="nt">--redirect-target</span> DROP
    <span class="c"># returning outbound traffic</span>
    ebtables <span class="nt">-t</span> broute <span class="nt">-A</span> BROUTING <span class="nt">-p</span> IPv4 <span class="nt">--ip-src</span> 10.0.1.2 <span class="se">\</span>
    <span class="nt">-j</span> redirect <span class="nt">--redirect-target</span> DROP
</code></pre></div></div>

<p>We also need to disable rp_filter on the virtual machine interface and the libvirt bridge interface</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">echo </span>0 <span class="o">&gt;</span> /proc/sys/net/ipv4/conf/virbr0/rp_filter
<span class="nb">echo </span>0 <span class="o">&gt;</span> /proc/sys/net/ipv4/conf/virbr0-nic/rp_filter
<span class="nb">echo </span>0 <span class="o">&gt;</span> /proc/sys/net/ipv4/conf/vnet0/rp_filter
</code></pre></div></div>

<p>After this configuration the container start the semi-tproxy process for egress traffic and the haproxy process for the ingress traffic.</p>

<p>The semi-tproxy program is a golag program,binding a listener socket with the IP_TRANSPARENT socket option
Preparing a socket to receive connections with TProxy is really no different than what is normally done when setting up a socket to listen for connections. The only difference in the process is before the socket is bound, the IP_TRANSPARENT socket option.</p>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">syscall</span><span class="o">.</span><span class="n">SetsockoptInt</span><span class="p">(</span><span class="n">fileDescriptor</span><span class="p">,</span> <span class="n">syscall</span><span class="o">.</span><span class="n">SOL_IP</span><span class="p">,</span> <span class="n">syscall</span><span class="o">.</span><span class="n">IP_TRANSPARENT</span><span class="p">,</span> <span class="m">1</span><span class="p">)</span>
</code></pre></div></div>

<p>About IP_TRANSPARENT</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>IP_TRANSPARENT (since Linux 2.6.24)
Setting this boolean option enables transparent proxying on
this socket.  This socket option allows the calling applica‐
tion to bind to a nonlocal IP address and operate both as a
client and a server with the foreign address as the local
end‐point.  NOTE: this requires that routing be set up in
a way that packets going to the foreign address are routed
through the TProxy box (i.e., the system hosting the
application that employs the IP_TRANSPARENT socket option).
Enabling this socket option requires superuser privileges
(the CAP_NET_ADMIN capability).

TProxy redirection with the iptables TPROXY target also
requires that this option be set on the redirected socket.
</code></pre></div></div>

<p>Then we set the IP_TRANSPARENT socket option on outbound connections
Same goes for making connections to a remote host pretending to be the client, the IP_TRANSPARENT socket option is set and the Linux kernel will allow the bind so along as a connection was intercepted with those details being used for the bind.</p>

<p>When the process get a new connection we start a connection to the real destination address and copy the traffic between both sockets</p>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">var</span> <span class="n">streamWait</span> <span class="n">sync</span><span class="o">.</span><span class="n">WaitGroup</span>
<span class="n">streamWait</span><span class="o">.</span><span class="n">Add</span><span class="p">(</span><span class="m">2</span><span class="p">)</span>

<span class="n">streamConn</span> <span class="o">:=</span> <span class="k">func</span><span class="p">(</span><span class="n">dst</span> <span class="n">io</span><span class="o">.</span><span class="n">Writer</span><span class="p">,</span> <span class="n">src</span> <span class="n">io</span><span class="o">.</span><span class="n">Reader</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">io</span><span class="o">.</span><span class="n">Copy</span><span class="p">(</span><span class="n">dst</span><span class="p">,</span> <span class="n">src</span><span class="p">)</span>
    <span class="n">streamWait</span><span class="o">.</span><span class="n">Done</span><span class="p">()</span>
<span class="p">}</span>

<span class="k">go</span> <span class="n">streamConn</span><span class="p">(</span><span class="n">remoteConn</span><span class="p">,</span> <span class="n">VMconn</span><span class="p">)</span>
<span class="k">go</span> <span class="n">streamConn</span><span class="p">(</span><span class="n">VMconn</span><span class="p">,</span> <span class="n">remoteConn</span><span class="p">)</span>

<span class="n">streamWait</span><span class="o">.</span><span class="n">Wait</span><span class="p">()</span>
</code></pre></div></div>

<p>The Haproxy helps us with the ingress traffic with the follow configuration</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>defaults
  mode tcp
frontend main
  bind *:9080
  default_backend guest
backend guest
  server guest 10.0.1.2:9080 maxconn 2048
</code></pre></div></div>

<p>It sends all the traffic to our virtual machine on the service port the machine is listening.</p>

<p><a href="https://github.com/SchSeba/SemiTrasperentProxy">Code repository</a></p>

<h3 id="tproxy-conclusions">tproxy conclusions</h3>

<p>This solution is a general solution, not a dedicated solution to istio only. Its make the vm traffic look like a regular process inside the pod so it will work with any sidecars projects</p>

<p>Egress data flow in this solution:</p>

<p><img src="../assets/2018-06-03-Research-run-VMs-with-istio-service-mesh/semi-tproxy-egress.png" alt="tproxy-egress-traffic" /></p>

<p>Ingress data flow in this solution:</p>

<p><img src="../assets/2018-06-03-Research-run-VMs-with-istio-service-mesh/nat-proxy-ingress.png" alt="tproxy-ingress-traffic" /></p>

<p>Pros:</p>

<ul>
  <li>other process can change the nat table (this solution works on the mangle table)</li>
  <li>better preformance comparing to nat-proxy</li>
  <li>Works with any sidecar solution</li>
</ul>

<p>Cons:</p>

<ul>
  <li>Need NET_ADMIN capability for the docker</li>
  <li>External process needed</li>
  <li>The traffic is passed to user space</li>
  <li>Only support ingress TCP connection</li>
</ul>

<h1 id="research-conclustion">Research Conclustion</h1>

<p>KubeVirt shows it is possible to run virtual machines inside a kubernetes cluster, and this post shows that the virtual machine can also get the benefit of it.</p>
:ET