I"U˜<p>The <a href="https://github.com/kubevirt/kubevirt/">KubeVirt</a> project provides extensions to Kubernetes via <a href="https://kubernetes.io/docs/concepts/api-extension/custom-resources/">custom resources</a>.</p>

<p>These resources are a collection a API objects that defines a virtual machine within Kubernetes.</p>

<p>I think itâ€™s important to point out the two great resources that I used to
compile information for this post:</p>

<ul>
  <li><a href="http://www.kubevirt.io/user-guide/">user-guide</a></li>
  <li><a href="http://www.kubevirt.io/api-reference/">api-reference</a></li>
</ul>

<p>With that letâ€™s take a look at the objects that are available.</p>

<h1 id="kubevirt-top-level-objects">KubeVirt top-level objects</h1>

<p>Below is a list of the top level API objects and descriptions that KubeVirt provides.</p>

<ul>
  <li>
    <p>VirtualMachine (vm[s]) - represents a virtual machine in the runtime environment of Kubernetes.</p>
  </li>
  <li>
    <p>OfflineVirtualMachine (ovm[s]) - handles the virtual machines that are not running or are in a stopped state.</p>
  </li>
  <li>
    <p>VirtualMachinePreset (vmpreset[s]) - is an extension to general VirtualMachine configuration behaving much like PodPresets from Kubernetes. When a VirtualMachine is created, any applicable VirtualMachinePresets will be applied to the existing spec for the VirtualMachine. This allows for re-use of common settings that should apply to multiple VirtualMachines.</p>
  </li>
  <li>
    <p>VirtualMachineReplicaSet (vmrs[s]) - tries to ensures that a specified number of VirtualMachine replicas are running at any time.</p>
  </li>
</ul>

<p><a href="http://www.kubevirt.io/api-reference/v0.5.0/definitions.html#_v1_domainspec">DomainSpec</a> is listed as a top-level object but is only used within all of the objects above. Currently the <code class="highlighter-rouge">DomainSpec</code> is a subset of what is configurable via <a href="https://libvirt.org/formatdomain.html">libvirt domain XML</a>.</p>

<h2 id="virtualmachine">VirtualMachine</h2>

<p>VirtualMachine is mortal object just like a
<a href="https://kubernetes.io/docs/concepts/workloads/pods/pod/">Pod</a> within Kubernetes.
It only runs once and cannot be resurrected. This might seem problematic especially
to an administrator coming from a traditional virtualization background. Fortunately
later we will discuss OfflineVirtualMachines which will address this.</p>

<p>First letâ€™s use <code class="highlighter-rouge">kubectl</code> to retrieve a list of <code class="highlighter-rouge">VirtualMachine</code> objects.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ kubectl get vms -n nodejs-ex
NAME      AGE
mongodb   5d
nodejs    5d
</code></pre></div></div>

<p>We can also use <code class="highlighter-rouge">kubectl describe</code></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ kubectl describe vms -n test
Name:         testvm
Namespace:    test
Labels:       guest=testvm
              kubevirt.io/nodeName=kn2.virtomation.com
              kubevirt.io/size=small
...output...
Events:
  Type    Reason              Age                From                               Message
  ----    ------              ----               ----                               -------
  Normal  SuccessfulCreate    59m                virtualmachine-controller          Created virtual machine pod virt-launcher-testvm-8h927
  Normal  SuccessfulHandOver  59m                virtualmachine-controller          Pod owner ship transfered to the node virt-launcher-testvm-8h927
  Normal  Created             59m (x2 over 59m)  virt-handler, kn2.virtomation.com  VM defined.
  Normal  Started             59m                virt-handler, kn2.virtomation.com  VM started.

</code></pre></div></div>

<p>And just in case if you want to return the yaml definition of a <code class="highlighter-rouge">VirtualMachine</code> object here is an example.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ kubectl -o yaml get vms mongodb -n nodejs-ex
apiVersion: kubevirt.io/v1alpha1
kind: VirtualMachine
...output...
</code></pre></div></div>

<p>The first object we will annotate is <code class="highlighter-rouge">VirtualMachine</code>. The important sections <code class="highlighter-rouge">.spec</code> for <code class="highlighter-rouge">VirtualMachineSpec</code> and <code class="highlighter-rouge">.spec.domain</code> for <code class="highlighter-rouge">DomainSpec</code> will be annotated only in this section then referred to in the other object sections.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">apiVersion</span><span class="pi">:</span> <span class="s">kubevirt.io/v1alpha1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">VirtualMachine</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">annotations</span><span class="pi">:</span> <span class="pi">{}</span>
  <span class="na">labels</span><span class="pi">:</span> <span class="pi">{}</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">string</span>
  <span class="na">namespace</span><span class="pi">:</span> <span class="s">string</span>
<span class="na">spec</span><span class="pi">:</span> <span class="pi">{}</span>
</code></pre></div></div>

<h3 id="node-placement">Node Placement</h3>

<p>Kubernetes has the ability to schedule a pod to specific nodes based on <a href="https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#node-affinity-beta-feature">affinity and anti-affinity</a> rules.</p>

<p><a href="http://www.kubevirt.io/api-reference/v0.5.0/definitions.html#_v1_nodeaffinity">Node affinity</a> is also possible with KubeVirt. To <a href="http://www.kubevirt.io/user-guide/#/workloads/virtual-machines/assigning-vms-to-nodes?id=affinity-and-anti-affinity">constrain a virtual machine</a> to run on a node define a matching expressions using node labels.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">affinity</span><span class="pi">:</span>
  <span class="na">nodeAffinity</span><span class="pi">:</span>
    <span class="na">preferredDuringSchedulingIgnoredDuringExecution</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">preference</span><span class="pi">:</span>
          <span class="na">matchExpressions</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="na">key</span><span class="pi">:</span> <span class="s">string</span>
              <span class="na">operator</span><span class="pi">:</span> <span class="s">string</span>
              <span class="na">values</span><span class="pi">:</span>
                <span class="pi">-</span> <span class="s">string</span>
        <span class="na">weight</span><span class="pi">:</span> <span class="m">0</span>
    <span class="na">requiredDuringSchedulingIgnoredDuringExecution</span><span class="pi">:</span>
      <span class="na">nodeSelectorTerms</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="na">matchExpressions</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="na">key</span><span class="pi">:</span> <span class="s">string</span>
              <span class="na">operator</span><span class="pi">:</span> <span class="s">string</span>
              <span class="na">values</span><span class="pi">:</span>
                <span class="pi">-</span> <span class="s">string</span>
</code></pre></div></div>

<p>A virtual machine can also more easily be constrained by using <a href="http://www.kubevirt.io/user-guide/#/workloads/virtual-machines/assigning-vms-to-nodes?id=nodeselector">nodeSelector</a> which is defined by nodeâ€™s label and value. Here is an example</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">nodeSelector</span><span class="pi">:</span>
  <span class="s">kubernetes.io/hostname</span><span class="pi">:</span> <span class="s">kn1.virtomation.com</span>
</code></pre></div></div>

<h3 id="clocks-and-timers">Clocks and Timers</h3>

<p>Configures the <a href="http://www.kubevirt.io/user-guide/#/workloads/virtual-machines/virtualized-hardware-configuration?id=clock">virtualize hardware</a> clock provided by <a href="https://qemu.weilnetz.de/doc/qemu-doc.html#Debug_002fExpert-options">QEMU</a>.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">domain</span><span class="pi">:</span>
  <span class="na">clock</span><span class="pi">:</span>
    <span class="na">timezone</span><span class="pi">:</span> <span class="s">string</span>
    <span class="na">utc</span><span class="pi">:</span>
      <span class="na">offsetSeconds</span><span class="pi">:</span> <span class="m">0</span>
</code></pre></div></div>

<p>The <a href="http://www.kubevirt.io/user-guide/#/workloads/virtual-machines/virtualized-hardware-configuration?id=timers">timer</a> defines the <a href="https://libvirt.org/formatdomain.html#elementsTime">type and policy attribute</a> that determines what action is take when QEMU misses a deadline for injecting a tick to the guest.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">domain</span><span class="pi">:</span>
  <span class="na">clock</span><span class="pi">:</span>
    <span class="na">timer</span><span class="pi">:</span>
      <span class="na">hpet</span><span class="pi">:</span>
        <span class="na">present</span><span class="pi">:</span> <span class="no">true</span>
        <span class="na">tickPolicy</span><span class="pi">:</span> <span class="s">string</span>
      <span class="na">hyperv</span><span class="pi">:</span>
        <span class="na">present</span><span class="pi">:</span> <span class="no">true</span>
      <span class="na">kvm</span><span class="pi">:</span>
        <span class="na">present</span><span class="pi">:</span> <span class="no">true</span>
      <span class="na">pit</span><span class="pi">:</span>
        <span class="na">present</span><span class="pi">:</span> <span class="no">true</span>
        <span class="na">tickPolicy</span><span class="pi">:</span> <span class="s">string</span>
      <span class="na">rtc</span><span class="pi">:</span>
        <span class="na">present</span><span class="pi">:</span> <span class="no">true</span>
        <span class="na">tickPolicy</span><span class="pi">:</span> <span class="s">string</span>
        <span class="na">track</span><span class="pi">:</span> <span class="s">string</span>
</code></pre></div></div>

<h3 id="cpu-and-memory">CPU and Memory</h3>

<p>The number of <a href="http://www.kubevirt.io/user-guide/#/workloads/virtual-machines/virtualized-hardware-configuration?id=cpu">CPU cores</a> a virtual machine will be assigned. <a href="http://www.kubevirt.io/api-reference/v0.5.0/definitions.html#_v1_cpu">.spec.domain.cpu.cores</a> will not be used for scheduling use <a href="http://www.kubevirt.io/api-reference/v0.4.1/definitions.html#_v1_resourcerequirements">.spec.domain.resources.requests.cpu</a> instead.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">cpu</span><span class="pi">:</span>
  <span class="na">cores</span><span class="pi">:</span> <span class="m">1</span>
</code></pre></div></div>

<p>There are two supported <a href="http://www.kubevirt.io/user-guide/#/workloads/virtual-machines/virtualized-hardware-configuration?id=resources-requests-and-limits">resource limits and requests</a>: <code class="highlighter-rouge">cpu</code> and <code class="highlighter-rouge">memory</code>. A <code class="highlighter-rouge">.spec.domain.resources.requests.memory</code> should be defined to determine the allocation of memory provided to the virtual machine. These values will be used to in scheduling decisions.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">resources</span><span class="pi">:</span>
  <span class="na">limits</span><span class="pi">:</span> <span class="pi">{}</span>
  <span class="na">requests</span><span class="pi">:</span> <span class="pi">{}</span>
</code></pre></div></div>

<h3 id="watchdog-devices">Watchdog Devices</h3>

<p><a href="http://www.kubevirt.io/api-reference/v0.5.0/definitions.html#_v1_watchdog">.spec.domain.watchdog</a> automatically triggers an action via <a href="https://libvirt.org/formatdomain.html#elementsWatchdog">Libvirt</a> and <a href="https://qemu.weilnetz.de/doc/qemu-doc.html#Debug_002fExpert-options">QEMU</a> when the virtual machine operating system hangs or crashes.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">watchdog</span><span class="pi">:</span>
  <span class="na">i6300esb</span><span class="pi">:</span>
    <span class="na">action</span><span class="pi">:</span> <span class="s">string</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">string</span>
</code></pre></div></div>

<h3 id="features">Features</h3>

<p><a href="http://www.kubevirt.io/api-reference/v0.5.0/definitions.html#_v1_features">.spec.domain.features</a>
are hypervisor cpu or machine features that can be enabled.
After reviewing both Linux and Microsoft QEMU virtual machines managed by
<a href="https://libvirt.org/formatdomain.html#elementsFeatures">Libvirt</a>
both acpi and
<a href="http://www.kubevirt.io/api-reference/v0.5.0/definitions.html#_v1_featureapic">apic</a>
should be enabled.
The <a href="http://www.kubevirt.io/api-reference/v0.4.1/definitions.html#_v1_featurehyperv">hyperv</a> features should be enabled only for Windows-based virtual machines. For additional information regarding features please visit the <a href="http://www.kubevirt.io/user-guide/#/workloads/virtual-machines/virtualized-hardware-configuration?id=features">virtual hardware configuration</a> in the kubevirt user guide.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">features</span><span class="pi">:</span>
  <span class="na">acpi</span><span class="pi">:</span>
    <span class="na">enabled</span><span class="pi">:</span> <span class="no">true</span>
  <span class="na">apic</span><span class="pi">:</span>
    <span class="na">enabled</span><span class="pi">:</span> <span class="no">true</span>
    <span class="na">endOfInterrupt</span><span class="pi">:</span> <span class="no">true</span>
  <span class="na">hyperv</span><span class="pi">:</span>
    <span class="na">relaxed</span><span class="pi">:</span>
      <span class="na">enabled</span><span class="pi">:</span> <span class="no">true</span>
    <span class="na">reset</span><span class="pi">:</span>
      <span class="na">enabled</span><span class="pi">:</span> <span class="no">true</span>
    <span class="na">runtime</span><span class="pi">:</span>
      <span class="na">enabled</span><span class="pi">:</span> <span class="no">true</span>
    <span class="na">spinlocks</span><span class="pi">:</span>
      <span class="na">enabled</span><span class="pi">:</span> <span class="no">true</span>
      <span class="na">spinlocks</span><span class="pi">:</span> <span class="m">0</span>
    <span class="na">synic</span><span class="pi">:</span>
      <span class="na">enabled</span><span class="pi">:</span> <span class="no">true</span>
    <span class="na">synictimer</span><span class="pi">:</span>
      <span class="na">enabled</span><span class="pi">:</span> <span class="no">true</span>
    <span class="na">vapic</span><span class="pi">:</span>
      <span class="na">enabled</span><span class="pi">:</span> <span class="no">true</span>
    <span class="na">vendorid</span><span class="pi">:</span>
      <span class="na">enabled</span><span class="pi">:</span> <span class="no">true</span>
      <span class="na">vendorid</span><span class="pi">:</span> <span class="s">string</span>
    <span class="na">vpindex</span><span class="pi">:</span>
      <span class="na">enabled</span><span class="pi">:</span> <span class="no">true</span>
</code></pre></div></div>

<h3 id="qemu-machine-type">QEMU Machine Type</h3>

<p><a href="http://www.kubevirt.io/user-guide/#/workloads/virtual-machines/virtualized-hardware-configuration?id=machine-type">.spec.domain.machine.type</a> is the emulated machine architecture provided by <a href="https://qemu.weilnetz.de/doc/qemu-doc.html#Standard-options">QEMU</a>.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">machine</span><span class="pi">:</span>
  <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
</code></pre></div></div>

<p>Here is an example how to retrieve the supported QEMU machine types.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="nv">$ </span>qemu-system-x86_64 <span class="nt">--machine</span> <span class="nb">help
    </span>Supported machines are:
    ...output...
    pc                   Standard PC <span class="o">(</span>i440FX + PIIX, 1996<span class="o">)</span> <span class="o">(</span><span class="nb">alias </span>of pc-i440fx-2.10<span class="o">)</span>
    pc-i440fx-2.10       Standard PC <span class="o">(</span>i440FX + PIIX, 1996<span class="o">)</span> <span class="o">(</span>default<span class="o">)</span>
    ...output...
    q35                  Standard PC <span class="o">(</span>Q35 + ICH9, 2009<span class="o">)</span> <span class="o">(</span><span class="nb">alias </span>of pc-q35-2.10<span class="o">)</span>
    pc-q35-2.10          Standard PC <span class="o">(</span>Q35 + ICH9, 2009<span class="o">)</span>
</code></pre></div></div>

<h3 id="disks-and-volumes">Disks and Volumes</h3>

<p><a href="http://www.kubevirt.io/api-reference/v0.5.0/definitions.html#_v1_disk">.spec.domain.devices.disks</a> configures a <a href="https://qemu.weilnetz.de/doc/qemu-doc.html#Block-device-options">QEMU</a> type of <a href="https://libvirt.org/formatdomain.html#elementsDisks">disk</a> to the virtual machine and assigns a specific <a href="http://www.kubevirt.io/user-guide/#/workloads/virtual-machines/disks-and-volumes">volume and its type to that disk</a> via the <code class="highlighter-rouge">volumeName</code>.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">devices</span><span class="pi">:</span>
  <span class="na">disks</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">cdrom</span><span class="pi">:</span>
        <span class="na">bus</span><span class="pi">:</span> <span class="s">string</span>
        <span class="na">readonly</span><span class="pi">:</span> <span class="no">true</span>
        <span class="na">tray</span><span class="pi">:</span> <span class="s">string</span>
      <span class="na">disk</span><span class="pi">:</span>
        <span class="na">bus</span><span class="pi">:</span> <span class="s">string</span>
        <span class="na">readonly</span><span class="pi">:</span> <span class="no">true</span>
      <span class="na">floppy</span><span class="pi">:</span>
        <span class="na">readonly</span><span class="pi">:</span> <span class="no">true</span>
        <span class="na">tray</span><span class="pi">:</span> <span class="s">string</span>
      <span class="na">lun</span><span class="pi">:</span>
        <span class="na">bus</span><span class="pi">:</span> <span class="s">string</span>
        <span class="na">readonly</span><span class="pi">:</span> <span class="no">true</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s">string</span>
      <span class="na">volumeName</span><span class="pi">:</span> <span class="s">string</span>
</code></pre></div></div>

<p><a href="http://www.kubevirt.io/api-reference/v0.5.0/definitions.html#_v1_cloudinitnocloudsource">cloudInitNoCloud</a>
injects scripts and configuration into a virtual machine operating system.
There are three different parameters that can be used to provide the
cloud-init coniguration: <code class="highlighter-rouge">secretRef</code>, <code class="highlighter-rouge">userData</code> or <code class="highlighter-rouge">userDataBase64</code>.</p>

<p>See the user-guide for examples of how to use <a href="http://www.kubevirt.io/user-guide/#/workloads/virtual-machines/startup-scripts?id=cloud-init-examples">.spec.volumes.cloudInitNoCloud</a>.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">volumes</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">cloudInitNoCloud</span><span class="pi">:</span>
      <span class="na">secretRef</span><span class="pi">:</span>
        <span class="na">name</span><span class="pi">:</span> <span class="s">string</span>
      <span class="na">userData</span><span class="pi">:</span> <span class="s">string</span>
      <span class="na">userDataBase64</span><span class="pi">:</span> <span class="s">string</span>
</code></pre></div></div>

<p>An <a href="http://www.kubevirt.io/user-guide/#/workloads/virtual-machines/disks-and-volumes?id=emptydisk">emptyDisk volume</a> creates an extra qcow2 disk that is created with the virtual machine. It will be removed if the <code class="highlighter-rouge">VirtualMachine</code> object is deleted.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">emptyDisk</span><span class="pi">:</span>
  <span class="na">capacity</span><span class="pi">:</span> <span class="s">string</span>
</code></pre></div></div>

<p><a href="http://www.kubevirt.io/user-guide/#/workloads/virtual-machines/disks-and-volumes?id=ephemeral">Ephemeral volume</a> creates a temporary local copy on write image storage that will be discarded when the <code class="highlighter-rouge">VirtualMachine</code> is removed.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">ephemeral</span><span class="pi">:</span>
  <span class="na">persistentVolumeClaim</span><span class="pi">:</span>
    <span class="na">claimName</span><span class="pi">:</span> <span class="s">string</span>
    <span class="na">readOnly</span><span class="pi">:</span> <span class="no">true</span>
<span class="na">name</span><span class="pi">:</span> <span class="s">string</span>
</code></pre></div></div>

<p><a href="http://www.kubevirt.io/user-guide/#/workloads/virtual-machines/disks-and-volumes?id=persistentvolumeclaim">persistentVolumeClaim volume</a> persists after the <code class="highlighter-rouge">VirtualMachine</code> is deleted.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">persistentVolumeClaim</span><span class="pi">:</span>
  <span class="na">claimName</span><span class="pi">:</span> <span class="s">string</span>
  <span class="na">readOnly</span><span class="pi">:</span> <span class="no">true</span>
</code></pre></div></div>

<p><a href="http://www.kubevirt.io/user-guide/#/workloads/virtual-machines/disks-and-volumes?id=registrydisk">registryDisk volume</a> type uses a virtual machine disk that is stored in a container image registry.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">registryDisk</span><span class="pi">:</span>
  <span class="na">image</span><span class="pi">:</span> <span class="s">string</span>
  <span class="na">imagePullSecret</span><span class="pi">:</span> <span class="s">string</span>
</code></pre></div></div>

<h3 id="virtual-machine-status">Virtual Machine Status</h3>

<p>Once the <code class="highlighter-rouge">VirtualMachine</code> object has been created the <a href="http://www.kubevirt.io/api-reference/v0.5.0/definitions.html#_v1_virtualmachinestatus">VirtualMachineStatus</a> will be available. <a href="http://www.kubevirt.io/api-reference/v0.4.1/definitions.html#_v1_virtualmachinestatus">VirtualMachineStatus</a> can be used in automation tools such as Ansible to confirm running state, determine where a <code class="highlighter-rouge">VirtualMachine</code> is running via <code class="highlighter-rouge">nodeName</code> or the <code class="highlighter-rouge">ipAddress</code> of the virtual machine operating system.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubectl -o yaml get vm mongodb -n nodejs-ex

# ...output...
status:
  interfaces:
  - ipAddress: 10.244.2.7
  nodeName: kn2.virtomation.com
  phase: Running
</code></pre></div></div>

<p>Example using <code class="highlighter-rouge">--template</code> to retrieve the <code class="highlighter-rouge">.status.phase</code> of the <code class="highlighter-rouge">VirtualMachine</code>.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubectl get vm mongodb --template {{.status.phase}} -n nodejs-ex
Running
</code></pre></div></div>

<h3 id="examples">Examples</h3>

<ul>
  <li><a href="https://www.kubevirt.io/user-guide/#/workloads/virtual-machines/creation?id=virtualmachine-api">https://www.kubevirt.io/user-guide/#/workloads/virtual-machines/creation?id=virtualmachine-api</a></li>
</ul>

<h2 id="offlinevirtualmachine">OfflineVirtualMachine</h2>

<p>An OfflineVirtualMachine is an immortal object within KubeVirt. The VirtualMachine
described within the spec will be recreated with a start power operation, host issue
or simply a accidental deletion of the VirtualMachine object.
For a traditional virtual administrator this object might be appropriate for
most use-cases.</p>

<p>Just like <code class="highlighter-rouge">VirtualMachine</code> we can retrieve the <code class="highlighter-rouge">OfflineVirtualMachine</code> objects.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ kubectl get ovms -n nodejs-ex
NAME      AGE
mongodb   5d
nodejs    5d
</code></pre></div></div>

<p>And display the object in yaml.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ kubectl -o yaml get ovms mongodb -n nodejs-ex
apiVersion: kubevirt.io/v1alpha1
kind: OfflineVirtualMachine
metadata:
...output...
</code></pre></div></div>

<p>We continue by annotating <code class="highlighter-rouge">OfflineVirtualMachine</code> object.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">apiVersion</span><span class="pi">:</span> <span class="s">kubevirt.io/v1alpha1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">OfflineVirtualMachine</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">annotations</span><span class="pi">:</span> <span class="pi">{}</span>
  <span class="na">labels</span><span class="pi">:</span> <span class="pi">{}</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">string</span>
  <span class="na">namespace</span><span class="pi">:</span> <span class="s">string</span>
<span class="na">spec</span><span class="pi">:</span>
</code></pre></div></div>

<h3 id="what-is-running-in-offlinevirtualmachine">What is Running in OfflineVirtualMachine?</h3>

<p><a href="http://www.kubevirt.io/api-reference/v0.5.0/definitions.html#_v1_offlinevirtualmachinespec">.spec.running</a> controls whether the associated VirtualMachine object is created. In other words this changes the <a href="http://www.kubevirt.io/user-guide/#/workloads/virtual-machines/life-cycle?id=stopping-a-virtual-machine">power status</a> of the virtual machine.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  running: true
</code></pre></div></div>

<p>This will create a <code class="highlighter-rouge">VirtualMachine</code> object which will instantiate and power on a virtual machine.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubectl patch offlinevirtualmachine mongodb --type merge -p '{"spec":{"running":true }}' -n nodejs-ex
</code></pre></div></div>

<p>This will delete the <code class="highlighter-rouge">VirtualMachine</code> object which will power off the virtual machine.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubectl patch offlinevirtualmachine mongodb --type merge -p '{"spec":{"running":false }}' -n nodejs-ex
</code></pre></div></div>

<p>And if you would rather not have to remember the <code class="highlighter-rouge">kubectl patch</code> command above
the KubeVirt team has provided a cli tool <code class="highlighter-rouge">virtctl</code> that can start and stop
a guest.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./virtctl start mongodb <span class="nt">-n</span> nodejs-ex
./virtctl stop mongodb <span class="nt">-n</span> nodejs-ex
</code></pre></div></div>

<h3 id="offline-virtual-machine-status">Offline Virtual Machine Status</h3>

<p>Once the <code class="highlighter-rouge">OfflineVirtualMachine</code> object has been created the <a href="http://www.kubevirt.io/api-reference/v0.5.0/definitions.html#_v1_offlinevirtualmachinestatus">OfflineVirtualMachineStatus</a> will be available. Like <code class="highlighter-rouge">VirtualMachineStatus</code> <code class="highlighter-rouge">OfflineVirtualMachineStatus</code> can be used for automation tools such as Ansible.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubectl -o yaml get ovms mongodb -n nodejs-ex

# ...output...
status:
  created: true
  ready: true
</code></pre></div></div>

<p>Example using <code class="highlighter-rouge">--template</code> to retrieve the <code class="highlighter-rouge">.status.conditions[0].type</code> of <code class="highlighter-rouge">OfflineVirtualMachine</code>.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubectl get ovm mongodb --template "{{.status.ready}}" -n nodejs-ex
true
</code></pre></div></div>

<h3 id="examples-1">Examples</h3>

<ul>
  <li><a href="https://www.kubevirt.io/user-guide/#/workloads/controllers/offline-virtual-machine?id=example">https://www.kubevirt.io/user-guide/#/workloads/controllers/offline-virtual-machine?id=example</a></li>
</ul>

<h2 id="virtualmachinereplicaset">VirtualMachineReplicaSet</h2>

<p><a href="http://www.kubevirt.io/user-guide/#/workloads/controllers/virtual-machine-replica-set">VirtualMachineReplicaSet</a> is great when you want to run multiple identical virtual machines.</p>

<p>Just like the other top-level objects we can retrieve <code class="highlighter-rouge">VirtualMachineReplicaSet</code>.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ kubectl get vmrs -n nodejs-ex
NAME      AGE
replica   1m
</code></pre></div></div>

<p>With the <code class="highlighter-rouge">replicas</code> parameter set to <code class="highlighter-rouge">2</code> the command below displays the two <code class="highlighter-rouge">VirtualMachine</code> objects that were created.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ kubectl get vms -n nodejs-ex
NAME           AGE
replicanmgjl   7m
replicarjhdz   7m
</code></pre></div></div>

<h3 id="pause-rollout">Pause rollout</h3>

<p>The <a href="http://www.kubevirt.io/api-reference/v0.5.0/definitions.html#_v1_vmreplicasetspec">.spec.paused</a> parameter if true pauses the deployment of the <code class="highlighter-rouge">VirtualMachineReplicaSet</code>.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  paused: true
</code></pre></div></div>

<h3 id="replica-quantity">Replica quantity</h3>

<p>The <a href="http://www.kubevirt.io/user-guide/#/workloads/controllers/virtual-machine-replica-set?id=how-to-use-a-virtualmachinereplicaset">.spec.replicas</a> number of <code class="highlighter-rouge">VirtualMachine</code> objects that should be created.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  replicas: 0
</code></pre></div></div>

<p>The <a href="http://www.kubevirt.io/api-reference/v0.5.0/definitions.html#_v1_labelselector">selector</a> must be defined and match labels defined in the template. It is used by the controller to keep track of managed virtual machines.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">selector</span><span class="pi">:</span>
  <span class="na">matchExpressions</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">key</span><span class="pi">:</span> <span class="s">string</span>
      <span class="na">operator</span><span class="pi">:</span> <span class="s">string</span>
      <span class="na">values</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="s">string</span>
  <span class="na">matchLabels</span><span class="pi">:</span> <span class="pi">{}</span>
</code></pre></div></div>

<h3 id="virtual-machine-template-spec"><a href="http://www.kubevirt.io/user-guide/#/workloads/controllers/virtual-machine-replica-set?id=how-to-use-a-virtualmachinereplicaset">Virtual Machine Template Spec</a></h3>

<p>The <code class="highlighter-rouge">VMTemplateSpec</code> is the definition of a <code class="highlighter-rouge">VirtualMachine</code> objects that will be created.</p>

<p>In the <code class="highlighter-rouge">VirtualMachine</code> section the <code class="highlighter-rouge">.spec</code> <code class="highlighter-rouge">VirtualMachineSpec</code> describes the available parameters for that object.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">template</span><span class="pi">:</span>
  <span class="na">metadata</span><span class="pi">:</span>
    <span class="na">annotations</span><span class="pi">:</span> <span class="pi">{}</span>
    <span class="na">labels</span><span class="pi">:</span> <span class="pi">{}</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s">string</span>
    <span class="na">namespace</span><span class="pi">:</span> <span class="s">string</span>
  <span class="na">spec</span><span class="pi">:</span> <span class="pi">{}</span>
</code></pre></div></div>

<h3 id="replica-status">Replica Status</h3>

<p>Like the other objects we already have discussed <a href="http://www.kubevirt.io/api-reference/v0.5.0/definitions.html#_v1_vmreplicasetstatus">VMReplicaSetStatus</a> is an important object to use for automation.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">status</span><span class="pi">:</span>
  <span class="na">readyReplicas</span><span class="pi">:</span> <span class="m">0</span>
  <span class="na">replicas</span><span class="pi">:</span> <span class="m">0</span>
</code></pre></div></div>

<p>Example using <code class="highlighter-rouge">--template</code> to retrieve the <code class="highlighter-rouge">.status.readyReplicas</code> and <code class="highlighter-rouge">.status.replicas</code> of <code class="highlighter-rouge">VirtualMachineReplicaSet</code>.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ kubectl get vmrs replica --template "{{.status.readyReplicas}}" -n nodejs-ex
2
$ kubectl get vmrs replica --template "{{.status.replicas}}" -n nodejs-ex
2
</code></pre></div></div>

<h3 id="examples-2">Examples</h3>

<ul>
  <li><a href="https://www.kubevirt.io/user-guide/#/workloads/controllers/virtual-machine-replica-set?id=example">https://www.kubevirt.io/user-guide/#/workloads/controllers/virtual-machine-replica-set?id=example</a></li>
</ul>

<h2 id="virtualmachinepreset">VirtualMachinePreset</h2>

<p>This is used to define a <code class="highlighter-rouge">DomainSpec</code> that can be used for multiple virtual machines.</p>

<p>To configure a <code class="highlighter-rouge">DomainSpec</code> for multiple <code class="highlighter-rouge">VirtualMachine</code> objects the <code class="highlighter-rouge">selector</code> defines which <code class="highlighter-rouge">VirtualMachine</code> the <code class="highlighter-rouge">VirtualMachinePreset</code> should be applied to.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ kubectl get vmpreset -n nodejs-ex
NAME       AGE
m1.small   17s
</code></pre></div></div>

<h3 id="domain-spec">Domain Spec</h3>

<p>See the <code class="highlighter-rouge">VirtualMachine</code> section above for annotated details of the <code class="highlighter-rouge">DomainSpec</code> object.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>spec:
  domain: {}
</code></pre></div></div>

<h3 id="preset-selector">Preset Selector</h3>

<p>The <a href="http://www.kubevirt.io/user-guide/#/workloads/virtual-machines/presets?id=virtalmachine-selector">selector</a> is optional but if not defined will be applied to all <code class="highlighter-rouge">VirtualMachine</code> objects; which is probably not the intended purpose so I recommend always including a selector.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">selector</span><span class="pi">:</span>
  <span class="na">matchExpressions</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">key</span><span class="pi">:</span> <span class="s">string</span>
      <span class="na">operator</span><span class="pi">:</span> <span class="s">string</span>
      <span class="na">values</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="s">string</span>
  <span class="na">matchLabels</span><span class="pi">:</span> <span class="pi">{}</span>
</code></pre></div></div>

<h3 id="examples-3">Examples</h3>

<ul>
  <li><a href="https://www.kubevirt.io/user-guide/#/workloads/virtual-machines/presets?id=examples">https://www.kubevirt.io/user-guide/#/workloads/virtual-machines/presets?id=examples</a></li>
</ul>

<p>We provided an annotated view into the KubeVirt objects - VirtualMachine, OfflineVirtualMachine, VirtualMachineReplicaSet and VirtualMachinePreset. Hopefully this will help a user of KubeVirt to understand the options and parameters that are currently available when creating a virtual machine on Kubernetes.</p>
:ET